{"id":"../node_modules/mailsplit/lib/headers.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/mailsplit/package.json","includedInParent":true,"mtime":1602507588612},{"name":"libmime","loc":{"line":3,"column":24},"parent":"/var/www/html/StMichel/node_modules/mailsplit/lib/headers.js","resolved":"/var/www/html/StMichel/node_modules/mailsplit/node_modules/libmime/lib/libmime.js"},{"name":"buffer","parent":"/var/www/html/StMichel/node_modules/mailsplit/lib/headers.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nconst libmime = require('libmime');\n\n/**\n * Class Headers to parse and handle message headers. Headers instance allows to\n * check existing, delete or add new headers\n */\nclass Headers {\n    constructor(headers, config) {\n        config = config || {};\n\n        if (Array.isArray(headers)) {\n            // already using parsed headers\n            this.changed = true;\n            this.headers = false;\n            this.parsed = true;\n            this.lines = headers;\n        } else {\n            // using original string/buffer headers\n            this.changed = false;\n            this.headers = headers;\n            this.parsed = false;\n            this.lines = false;\n        }\n        this.mbox = false;\n        this.http = false;\n\n        this.libmime = new libmime.Libmime({ Iconv: config.Iconv });\n    }\n\n    hasHeader(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        return typeof this.lines.find(line => line.key === key) === 'object';\n    }\n\n    get(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        let lines = this.lines.filter(line => line.key === key).map(line => line.line);\n\n        return lines;\n    }\n\n    getDecoded(key) {\n        return this.get(key)\n            .map(line => this.libmime.decodeHeader(line))\n            .filter(line => line && line.value);\n    }\n\n    getFirst(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        let header = this.lines.find(line => line.key === key);\n        if (!header) {\n            return '';\n        }\n        return ((this.libmime.decodeHeader(header.line) || {}).value || '').toString().trim();\n    }\n\n    getList() {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        return this.lines;\n    }\n\n    add(key, value, index) {\n        if (typeof value === 'undefined') {\n            return;\n        }\n\n        if (typeof value === 'number') {\n            value = value.toString();\n        }\n\n        if (typeof value === 'string') {\n            value = Buffer.from(value);\n        }\n\n        value = value.toString('binary');\n        this.addFormatted(key, this.libmime.foldLines(key + ': ' + value.replace(/\\r?\\n/g, ''), 76, false), index);\n    }\n\n    addFormatted(key, line, index) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        index = index || 0;\n        this.changed = true;\n\n        if (!line) {\n            return;\n        }\n\n        if (typeof line !== 'string') {\n            line = line.toString('binary');\n        }\n\n        let header = {\n            key: this._normalizeHeader(key),\n            line\n        };\n\n        if (index < 1) {\n            this.lines.unshift(header);\n        } else if (index >= this.lines.length) {\n            this.lines.push(header);\n        } else {\n            this.lines.splice(index, 0, header);\n        }\n    }\n\n    remove(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        for (let i = this.lines.length - 1; i >= 0; i--) {\n            if (this.lines[i].key === key) {\n                this.changed = true;\n                this.lines.splice(i, 1);\n            }\n        }\n    }\n\n    update(key, value, relativeIndex) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        let keyName = key;\n        let index = 0;\n        key = this._normalizeHeader(key);\n        let relativeIndexCount = 0;\n        let relativeMatchFound = false;\n        for (let i = this.lines.length - 1; i >= 0; i--) {\n            if (this.lines[i].key === key) {\n                if (relativeIndex && relativeIndex !== relativeIndexCount) {\n                    relativeIndexCount++;\n                    continue;\n                }\n                index = i;\n                this.changed = true;\n                this.lines.splice(i, 1);\n                if (relativeIndex) {\n                    relativeMatchFound = true;\n                    break;\n                }\n            }\n        }\n        if (relativeIndex && !relativeMatchFound) return;\n        this.add(keyName, value, index);\n    }\n\n    build(lineEnd) {\n        if (!this.changed && !lineEnd) {\n            return typeof this.headers === 'string' ? Buffer.from(this.headers, 'binary') : this.headers;\n        }\n\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n\n        lineEnd = lineEnd || '\\r\\n';\n\n        let headers = this.lines.map(line => line.line.replace(/\\r?\\n/g, lineEnd)).join(lineEnd) + `${lineEnd}${lineEnd}`;\n\n        if (this.mbox) {\n            headers = this.mbox + lineEnd + headers;\n        }\n\n        if (this.http) {\n            headers = this.http + lineEnd + headers;\n        }\n\n        return Buffer.from(headers, 'binary');\n    }\n\n    _normalizeHeader(key) {\n        return (key || '').toLowerCase().trim();\n    }\n\n    _parseHeaders() {\n        if (!this.headers) {\n            this.lines = [];\n            this.parsed = true;\n            return;\n        }\n\n        let lines = this.headers\n            .toString('binary')\n            .replace(/[\\r\\n]+$/, '')\n            .split(/\\r?\\n/);\n\n        for (let i = lines.length - 1; i >= 0; i--) {\n            let chr = lines[i].charAt(0);\n            if (i && (chr === ' ' || chr === '\\t')) {\n                lines[i - 1] += '\\r\\n' + lines[i];\n                lines.splice(i, 1);\n            } else {\n                let line = lines[i];\n                if (!i && /^From /i.test(line)) {\n                    // mbox file\n                    this.mbox = line;\n                    lines.splice(i, 1);\n                    continue;\n                } else if (!i && /^POST /i.test(line)) {\n                    // HTTP POST request\n                    this.http = line;\n                    lines.splice(i, 1);\n                    continue;\n                }\n                let key = this._normalizeHeader(line.substr(0, line.indexOf(':')));\n                lines[i] = {\n                    key,\n                    line\n                };\n            }\n        }\n\n        this.lines = lines;\n        this.parsed = true;\n    }\n}\n\n// expose to the world\nmodule.exports = Headers;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mailsplit/lib/headers.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}}],"sources":{"../node_modules/mailsplit/lib/headers.js":"'use strict';\n\nconst libmime = require('libmime');\n\n/**\n * Class Headers to parse and handle message headers. Headers instance allows to\n * check existing, delete or add new headers\n */\nclass Headers {\n    constructor(headers, config) {\n        config = config || {};\n\n        if (Array.isArray(headers)) {\n            // already using parsed headers\n            this.changed = true;\n            this.headers = false;\n            this.parsed = true;\n            this.lines = headers;\n        } else {\n            // using original string/buffer headers\n            this.changed = false;\n            this.headers = headers;\n            this.parsed = false;\n            this.lines = false;\n        }\n        this.mbox = false;\n        this.http = false;\n\n        this.libmime = new libmime.Libmime({ Iconv: config.Iconv });\n    }\n\n    hasHeader(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        return typeof this.lines.find(line => line.key === key) === 'object';\n    }\n\n    get(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        let lines = this.lines.filter(line => line.key === key).map(line => line.line);\n\n        return lines;\n    }\n\n    getDecoded(key) {\n        return this.get(key)\n            .map(line => this.libmime.decodeHeader(line))\n            .filter(line => line && line.value);\n    }\n\n    getFirst(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        let header = this.lines.find(line => line.key === key);\n        if (!header) {\n            return '';\n        }\n        return ((this.libmime.decodeHeader(header.line) || {}).value || '').toString().trim();\n    }\n\n    getList() {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        return this.lines;\n    }\n\n    add(key, value, index) {\n        if (typeof value === 'undefined') {\n            return;\n        }\n\n        if (typeof value === 'number') {\n            value = value.toString();\n        }\n\n        if (typeof value === 'string') {\n            value = Buffer.from(value);\n        }\n\n        value = value.toString('binary');\n        this.addFormatted(key, this.libmime.foldLines(key + ': ' + value.replace(/\\r?\\n/g, ''), 76, false), index);\n    }\n\n    addFormatted(key, line, index) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        index = index || 0;\n        this.changed = true;\n\n        if (!line) {\n            return;\n        }\n\n        if (typeof line !== 'string') {\n            line = line.toString('binary');\n        }\n\n        let header = {\n            key: this._normalizeHeader(key),\n            line\n        };\n\n        if (index < 1) {\n            this.lines.unshift(header);\n        } else if (index >= this.lines.length) {\n            this.lines.push(header);\n        } else {\n            this.lines.splice(index, 0, header);\n        }\n    }\n\n    remove(key) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        key = this._normalizeHeader(key);\n        for (let i = this.lines.length - 1; i >= 0; i--) {\n            if (this.lines[i].key === key) {\n                this.changed = true;\n                this.lines.splice(i, 1);\n            }\n        }\n    }\n\n    update(key, value, relativeIndex) {\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n        let keyName = key;\n        let index = 0;\n        key = this._normalizeHeader(key);\n        let relativeIndexCount = 0;\n        let relativeMatchFound = false;\n        for (let i = this.lines.length - 1; i >= 0; i--) {\n            if (this.lines[i].key === key) {\n                if (relativeIndex && relativeIndex !== relativeIndexCount) {\n                    relativeIndexCount++;\n                    continue;\n                }\n                index = i;\n                this.changed = true;\n                this.lines.splice(i, 1);\n                if (relativeIndex) {\n                    relativeMatchFound = true;\n                    break;\n                }\n            }\n        }\n        if (relativeIndex && !relativeMatchFound) return;\n        this.add(keyName, value, index);\n    }\n\n    build(lineEnd) {\n        if (!this.changed && !lineEnd) {\n            return typeof this.headers === 'string' ? Buffer.from(this.headers, 'binary') : this.headers;\n        }\n\n        if (!this.parsed) {\n            this._parseHeaders();\n        }\n\n        lineEnd = lineEnd || '\\r\\n';\n\n        let headers = this.lines.map(line => line.line.replace(/\\r?\\n/g, lineEnd)).join(lineEnd) + `${lineEnd}${lineEnd}`;\n\n        if (this.mbox) {\n            headers = this.mbox + lineEnd + headers;\n        }\n\n        if (this.http) {\n            headers = this.http + lineEnd + headers;\n        }\n\n        return Buffer.from(headers, 'binary');\n    }\n\n    _normalizeHeader(key) {\n        return (key || '').toLowerCase().trim();\n    }\n\n    _parseHeaders() {\n        if (!this.headers) {\n            this.lines = [];\n            this.parsed = true;\n            return;\n        }\n\n        let lines = this.headers\n            .toString('binary')\n            .replace(/[\\r\\n]+$/, '')\n            .split(/\\r?\\n/);\n\n        for (let i = lines.length - 1; i >= 0; i--) {\n            let chr = lines[i].charAt(0);\n            if (i && (chr === ' ' || chr === '\\t')) {\n                lines[i - 1] += '\\r\\n' + lines[i];\n                lines.splice(i, 1);\n            } else {\n                let line = lines[i];\n                if (!i && /^From /i.test(line)) {\n                    // mbox file\n                    this.mbox = line;\n                    lines.splice(i, 1);\n                    continue;\n                } else if (!i && /^POST /i.test(line)) {\n                    // HTTP POST request\n                    this.http = line;\n                    lines.splice(i, 1);\n                    continue;\n                }\n                let key = this._normalizeHeader(line.substr(0, line.indexOf(':')));\n                lines[i] = {\n                    key,\n                    line\n                };\n            }\n        }\n\n        this.lines = lines;\n        this.parsed = true;\n    }\n}\n\n// expose to the world\nmodule.exports = Headers;\n"},"lineCount":236}},"error":null,"hash":"fb3eba8d95d6c8f57a93f1ec84e10b2e","cacheData":{"env":{}}}