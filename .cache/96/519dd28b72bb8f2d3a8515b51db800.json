{"id":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/@hapi/hoek/package.json","includedInParent":true,"mtime":1602507588116},{"name":"./assert","loc":{"line":3,"column":23},"parent":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","resolved":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/assert.js"}],"generated":{"js":"'use strict';\n\nconst Assert = require('./assert');\n\n\nconst internals = {};\n\n\nmodule.exports = function (attribute) {\n\n    // Allowed value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \\, \"\n\n    Assert(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');\n\n    return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');                             // Escape quotes and slash\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../node_modules/@hapi/hoek/lib/escapeHeaderAttribute.js":"'use strict';\n\nconst Assert = require('./assert');\n\n\nconst internals = {};\n\n\nmodule.exports = function (attribute) {\n\n    // Allowed value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \\, \"\n\n    Assert(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');\n\n    return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');                             // Escape quotes and slash\n};\n"},"lineCount":17}},"error":null,"hash":"c7e1ac9e40074014f1dc512bfc04b488","cacheData":{"env":{}}}