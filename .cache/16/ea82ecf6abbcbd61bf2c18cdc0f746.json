{"id":"../node_modules/mensch/lib/parser.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/mensch/package.json","includedInParent":true,"mtime":1602507588604},{"name":"./debug","loc":{"line":4,"column":20},"parent":"/var/www/html/StMichel/node_modules/mensch/lib/parser.js","resolved":"/var/www/html/StMichel/node_modules/mensch/lib/debug.js"},{"name":"./lexer","loc":{"line":5,"column":18},"parent":"/var/www/html/StMichel/node_modules/mensch/lib/parser.js","resolved":"/var/www/html/StMichel/node_modules/mensch/lib/lexer.js"}],"generated":{"js":"var DEBUG = false; // `true` to print debugging info.\nvar TIMER = false; // `true` to time calls to `parse()` and print the results.\n\nvar debug = require('./debug')('parse');\nvar lex = require('./lexer');\n\nexports = module.exports = parse;\n\nvar _comments;   // Whether comments are allowed.\nvar _depth;      // Current block nesting depth.\nvar _position;   // Whether to include line/column position.\nvar _tokens;     // Array of lexical tokens.\n\n/**\n * Convert a CSS string or array of lexical tokens into a `stringify`-able AST.\n *\n * @param {String} css CSS string or array of lexical token\n * @param {Object} [options]\n * @param {Boolean} [options.comments=false] allow comment nodes in the AST\n * @returns {Object} `stringify`-able AST\n */\nfunction parse(css, options) {\n  var start; // Debug timer start.\n\n  options || (options = {});\n  _comments = !!options.comments;\n  _position = !!options.position;\n\n  _depth = 0;\n\n  // Operate on a copy of the given tokens, or the lex()'d CSS string.\n  _tokens = Array.isArray(css) ? css.slice() : lex(css);\n\n  var rule;\n  var rules = [];\n  var token;\n\n  TIMER && (start = Date.now());\n\n  while ((token = next())) {\n    rule = parseToken(token);\n    rule && rules.push(rule);\n  }\n\n  TIMER && debug('ran in', (Date.now() - start) + 'ms');\n\n  return {\n    type: \"stylesheet\",\n    stylesheet: {\n      rules: rules\n    }\n  };\n}\n\n// -- Functions --------------------------------------------------------------\n\n/**\n * Build an AST node from a lexical token.\n *\n * @param {Object} token lexical token\n * @param {Object} [override] object hash of properties that override those\n *   already in the token, or that will be added to the token.\n * @returns {Object} AST node\n */\nfunction astNode(token, override) {\n  override || (override = {});\n\n  var key;\n  var keys = ['type', 'name', 'value'];\n  var node = {};\n\n  // Avoiding [].forEach for performance reasons.\n  for (var i = 0; i < keys.length; ++i) {\n    key = keys[i];\n\n    if (token[key]) {\n      node[key] = override[key] || token[key];\n    }\n  }\n\n  keys = Object.keys(override);\n\n  for (i = 0; i < keys.length; ++i) {\n    key = keys[i];\n\n    if (!node[key]) {\n      node[key] = override[key];\n    }\n  }\n\n  if (_position) {\n    node.position = {\n      start: token.start,\n      end: token.end\n    };\n  }\n\n  DEBUG && debug('astNode:', JSON.stringify(node, null, 2));\n\n  return node;\n}\n\n/**\n * Remove a lexical token from the stack and return the removed token.\n *\n * @returns {Object} lexical token\n */\nfunction next() {\n  var token = _tokens.shift();\n  DEBUG && debug('next:', JSON.stringify(token, null, 2));\n  return token;\n}\n\n// -- Parse* Functions ---------------------------------------------------------\n\n/**\n * Convert an @-group lexical token to an AST node.\n *\n * @param {Object} token @-group lexical token\n * @returns {Object} @-group AST node\n */\nfunction parseAtGroup(token) {\n  _depth = _depth + 1;\n\n  // As the @-group token is assembled, relevant token values are captured here\n  // temporarily. They will later be used as `tokenize()` overrides.\n  var overrides = {};\n\n  switch (token.type) {\n  case 'font-face':\n  case 'viewport' :\n    overrides.declarations = parseDeclarations();\n    break;\n\n  case 'page':\n    overrides.prefix = token.prefix;\n    overrides.declarations = parseDeclarations();\n    break;\n\n  default:\n    overrides.prefix = token.prefix;\n    overrides.rules = parseRules();\n  }\n\n  return astNode(token, overrides);\n}\n\n/**\n * Convert an @import lexical token to an AST node.\n *\n * @param {Object} token @import lexical token\n * @returns {Object} @import AST node\n */\nfunction parseAtImport(token) {\n  return astNode(token);\n}\n\n/**\n * Convert an @charset token to an AST node.\n *\n * @param {Object} token @charset lexical token\n * @returns {Object} @charset node\n */\nfunction parseCharset(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a comment token to an AST Node.\n *\n * @param {Object} token comment lexical token\n * @returns {Object} comment node\n */\nfunction parseComment(token) {\n  return astNode(token, {text: token.text});\n}\n\nfunction parseNamespace(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a property lexical token to a property AST node.\n *\n * @returns {Object} property node\n */\nfunction parseProperty(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a selector lexical token to a selector AST node.\n *\n * @param {Object} token selector lexical token\n * @returns {Object} selector node\n */\nfunction parseSelector(token) {\n  function trim(str) {\n    return str.trim();\n  }\n\n  return astNode(token, {\n    type: 'rule',\n    selectors: token.text.split(',').map(trim),\n    declarations: parseDeclarations(token)\n  });\n}\n\n/**\n * Convert a lexical token to an AST node.\n *\n * @returns {Object|undefined} AST node\n */\nfunction parseToken(token) {\n  switch (token.type) {\n  // Cases are listed in roughly descending order of probability.\n  case 'property': return parseProperty(token);\n\n  case 'selector': return parseSelector(token);\n\n  case 'at-group-end': _depth = _depth - 1; return;\n\n  case 'media'     :\n  case 'keyframes' :return parseAtGroup(token);\n\n  case 'comment': if (_comments) { return parseComment(token); } break;\n\n  case 'charset': return parseCharset(token);\n  case 'import': return parseAtImport(token);\n\n  case 'namespace': return parseNamespace(token);\n\n  case 'font-face':\n  case 'supports' :\n  case 'viewport' :\n  case 'document' :\n  case 'page'     : return parseAtGroup(token);\n  }\n\n  DEBUG && debug('parseToken: unexpected token:', JSON.stringify(token));\n}\n\n// -- Parse Helper Functions ---------------------------------------------------\n\n/**\n * Iteratively parses lexical tokens from the stack into AST nodes until a\n * conditional function returns `false`, at which point iteration terminates\n * and any AST nodes collected are returned.\n *\n * @param {Function} conditionFn\n *   @param {Object} token the lexical token being parsed\n *   @returns {Boolean} `true` if the token should be parsed, `false` otherwise\n * @return {Array} AST nodes\n */\nfunction parseTokensWhile(conditionFn) {\n  var node;\n  var nodes = [];\n  var token;\n\n  while ((token = next()) && (conditionFn && conditionFn(token))) {\n    node = parseToken(token);\n    node && nodes.push(node);\n  }\n\n  // Place an unused non-`end` lexical token back onto the stack.\n  if (token && token.type !== 'end') {\n    _tokens.unshift(token);\n  }\n\n  return nodes;\n}\n\n/**\n * Convert a series of tokens into a sequence of declaration AST nodes.\n *\n * @returns {Array} declaration nodes\n */\nfunction parseDeclarations() {\n  return parseTokensWhile(function (token) {\n    return (token.type === 'property' || token.type === 'comment');\n  });\n}\n\n/**\n * Convert a series of tokens into a sequence of rule nodes.\n *\n * @returns {Array} rule nodes\n */\nfunction parseRules() {\n  return parseTokensWhile(function () { return _depth; });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mensch/lib/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mensch/lib/parser.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}}],"sources":{"../node_modules/mensch/lib/parser.js":"var DEBUG = false; // `true` to print debugging info.\nvar TIMER = false; // `true` to time calls to `parse()` and print the results.\n\nvar debug = require('./debug')('parse');\nvar lex = require('./lexer');\n\nexports = module.exports = parse;\n\nvar _comments;   // Whether comments are allowed.\nvar _depth;      // Current block nesting depth.\nvar _position;   // Whether to include line/column position.\nvar _tokens;     // Array of lexical tokens.\n\n/**\n * Convert a CSS string or array of lexical tokens into a `stringify`-able AST.\n *\n * @param {String} css CSS string or array of lexical token\n * @param {Object} [options]\n * @param {Boolean} [options.comments=false] allow comment nodes in the AST\n * @returns {Object} `stringify`-able AST\n */\nfunction parse(css, options) {\n  var start; // Debug timer start.\n\n  options || (options = {});\n  _comments = !!options.comments;\n  _position = !!options.position;\n\n  _depth = 0;\n\n  // Operate on a copy of the given tokens, or the lex()'d CSS string.\n  _tokens = Array.isArray(css) ? css.slice() : lex(css);\n\n  var rule;\n  var rules = [];\n  var token;\n\n  TIMER && (start = Date.now());\n\n  while ((token = next())) {\n    rule = parseToken(token);\n    rule && rules.push(rule);\n  }\n\n  TIMER && debug('ran in', (Date.now() - start) + 'ms');\n\n  return {\n    type: \"stylesheet\",\n    stylesheet: {\n      rules: rules\n    }\n  };\n}\n\n// -- Functions --------------------------------------------------------------\n\n/**\n * Build an AST node from a lexical token.\n *\n * @param {Object} token lexical token\n * @param {Object} [override] object hash of properties that override those\n *   already in the token, or that will be added to the token.\n * @returns {Object} AST node\n */\nfunction astNode(token, override) {\n  override || (override = {});\n\n  var key;\n  var keys = ['type', 'name', 'value'];\n  var node = {};\n\n  // Avoiding [].forEach for performance reasons.\n  for (var i = 0; i < keys.length; ++i) {\n    key = keys[i];\n\n    if (token[key]) {\n      node[key] = override[key] || token[key];\n    }\n  }\n\n  keys = Object.keys(override);\n\n  for (i = 0; i < keys.length; ++i) {\n    key = keys[i];\n\n    if (!node[key]) {\n      node[key] = override[key];\n    }\n  }\n\n  if (_position) {\n    node.position = {\n      start: token.start,\n      end: token.end\n    };\n  }\n\n  DEBUG && debug('astNode:', JSON.stringify(node, null, 2));\n\n  return node;\n}\n\n/**\n * Remove a lexical token from the stack and return the removed token.\n *\n * @returns {Object} lexical token\n */\nfunction next() {\n  var token = _tokens.shift();\n  DEBUG && debug('next:', JSON.stringify(token, null, 2));\n  return token;\n}\n\n// -- Parse* Functions ---------------------------------------------------------\n\n/**\n * Convert an @-group lexical token to an AST node.\n *\n * @param {Object} token @-group lexical token\n * @returns {Object} @-group AST node\n */\nfunction parseAtGroup(token) {\n  _depth = _depth + 1;\n\n  // As the @-group token is assembled, relevant token values are captured here\n  // temporarily. They will later be used as `tokenize()` overrides.\n  var overrides = {};\n\n  switch (token.type) {\n  case 'font-face':\n  case 'viewport' :\n    overrides.declarations = parseDeclarations();\n    break;\n\n  case 'page':\n    overrides.prefix = token.prefix;\n    overrides.declarations = parseDeclarations();\n    break;\n\n  default:\n    overrides.prefix = token.prefix;\n    overrides.rules = parseRules();\n  }\n\n  return astNode(token, overrides);\n}\n\n/**\n * Convert an @import lexical token to an AST node.\n *\n * @param {Object} token @import lexical token\n * @returns {Object} @import AST node\n */\nfunction parseAtImport(token) {\n  return astNode(token);\n}\n\n/**\n * Convert an @charset token to an AST node.\n *\n * @param {Object} token @charset lexical token\n * @returns {Object} @charset node\n */\nfunction parseCharset(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a comment token to an AST Node.\n *\n * @param {Object} token comment lexical token\n * @returns {Object} comment node\n */\nfunction parseComment(token) {\n  return astNode(token, {text: token.text});\n}\n\nfunction parseNamespace(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a property lexical token to a property AST node.\n *\n * @returns {Object} property node\n */\nfunction parseProperty(token) {\n  return astNode(token);\n}\n\n/**\n * Convert a selector lexical token to a selector AST node.\n *\n * @param {Object} token selector lexical token\n * @returns {Object} selector node\n */\nfunction parseSelector(token) {\n  function trim(str) {\n    return str.trim();\n  }\n\n  return astNode(token, {\n    type: 'rule',\n    selectors: token.text.split(',').map(trim),\n    declarations: parseDeclarations(token)\n  });\n}\n\n/**\n * Convert a lexical token to an AST node.\n *\n * @returns {Object|undefined} AST node\n */\nfunction parseToken(token) {\n  switch (token.type) {\n  // Cases are listed in roughly descending order of probability.\n  case 'property': return parseProperty(token);\n\n  case 'selector': return parseSelector(token);\n\n  case 'at-group-end': _depth = _depth - 1; return;\n\n  case 'media'     :\n  case 'keyframes' :return parseAtGroup(token);\n\n  case 'comment': if (_comments) { return parseComment(token); } break;\n\n  case 'charset': return parseCharset(token);\n  case 'import': return parseAtImport(token);\n\n  case 'namespace': return parseNamespace(token);\n\n  case 'font-face':\n  case 'supports' :\n  case 'viewport' :\n  case 'document' :\n  case 'page'     : return parseAtGroup(token);\n  }\n\n  DEBUG && debug('parseToken: unexpected token:', JSON.stringify(token));\n}\n\n// -- Parse Helper Functions ---------------------------------------------------\n\n/**\n * Iteratively parses lexical tokens from the stack into AST nodes until a\n * conditional function returns `false`, at which point iteration terminates\n * and any AST nodes collected are returned.\n *\n * @param {Function} conditionFn\n *   @param {Object} token the lexical token being parsed\n *   @returns {Boolean} `true` if the token should be parsed, `false` otherwise\n * @return {Array} AST nodes\n */\nfunction parseTokensWhile(conditionFn) {\n  var node;\n  var nodes = [];\n  var token;\n\n  while ((token = next()) && (conditionFn && conditionFn(token))) {\n    node = parseToken(token);\n    node && nodes.push(node);\n  }\n\n  // Place an unused non-`end` lexical token back onto the stack.\n  if (token && token.type !== 'end') {\n    _tokens.unshift(token);\n  }\n\n  return nodes;\n}\n\n/**\n * Convert a series of tokens into a sequence of declaration AST nodes.\n *\n * @returns {Array} declaration nodes\n */\nfunction parseDeclarations() {\n  return parseTokensWhile(function (token) {\n    return (token.type === 'property' || token.type === 'comment');\n  });\n}\n\n/**\n * Convert a series of tokens into a sequence of rule nodes.\n *\n * @returns {Array} rule nodes\n */\nfunction parseRules() {\n  return parseTokensWhile(function () { return _depth; });\n}\n"},"lineCount":292}},"error":null,"hash":"04427f20ac21eacc1863f9544e6d9d8a","cacheData":{"env":{}}}