{"id":"../node_modules/mailparser/lib/mail-parser.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/mailparser/package.json","includedInParent":true,"mtime":1602507588320},{"name":"mailsplit","loc":{"line":3,"column":26},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/mailsplit/index.js"},{"name":"libmime","loc":{"line":4,"column":24},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/libmime/lib/libmime.js"},{"name":"nodemailer/lib/addressparser","loc":{"line":5,"column":30},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/mailparser/node_modules/nodemailer/lib/addressparser/index.js"},{"name":"stream","loc":{"line":6,"column":26},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/stream-browserify/index.js"},{"name":"punycode","loc":{"line":8,"column":25},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/node-libs-browser/node_modules/punycode/punycode.js"},{"name":"mailsplit/lib/flowed-decoder","loc":{"line":9,"column":30},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/mailsplit/lib/flowed-decoder.js"},{"name":"./stream-hash","loc":{"line":10,"column":27},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/mailparser/lib/stream-hash.js"},{"name":"iconv-lite","loc":{"line":11,"column":22},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/iconv-lite/lib/index.js"},{"name":"html-to-text","loc":{"line":12,"column":27},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/html-to-text/index.js"},{"name":"he","loc":{"line":13,"column":19},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/he/he.js"},{"name":"linkify-it","loc":{"line":14,"column":24},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/linkify-it/index.js"},{"name":"tlds","loc":{"line":15,"column":21},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/mailparser/node_modules/tlds/index.js"},{"name":"encoding-japanese","loc":{"line":16,"column":33},"parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/var/www/html/StMichel/node_modules/encoding-japanese/src/index.js"},{"name":"buffer","parent":"/var/www/html/StMichel/node_modules/mailparser/lib/mail-parser.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nconst mailsplit = require('mailsplit');\nconst libmime = require('libmime');\nconst addressparser = require('nodemailer/lib/addressparser');\nconst Transform = require('stream').Transform;\nconst Splitter = mailsplit.Splitter;\nconst punycode = require('punycode');\nconst FlowedDecoder = require('mailsplit/lib/flowed-decoder');\nconst StreamHash = require('./stream-hash');\nconst iconv = require('iconv-lite');\nconst htmlToText = require('html-to-text');\nconst he = require('he');\nconst linkify = require('linkify-it')();\nconst tlds = require('tlds');\nconst encodingJapanese = require('encoding-japanese');\n\nlinkify\n    .tlds(tlds) // Reload with full tlds list\n    .tlds('onion', true) // Add unofficial `.onion` domain\n    .add('git:', 'http:') // Add `git:` ptotocol as \"alias\"\n    .add('ftp:', null) // Disable `ftp:` ptotocol\n    .set({ fuzzyIP: true, fuzzyLink: true, fuzzyEmail: true });\n\n// twitter linkifier from\n// https://github.com/markdown-it/linkify-it#example-2-add-twitter-mentions-handler\nlinkify.add('@', {\n    validate(text, pos, self) {\n        let tail = text.slice(pos);\n\n        if (!self.re.twitter) {\n            self.re.twitter = new RegExp('^([a-zA-Z0-9_]){1,15}(?!_)(?=$|' + self.re.src_ZPCc + ')');\n        }\n        if (self.re.twitter.test(tail)) {\n            // Linkifier allows punctuation chars before prefix,\n            // but we additionally disable `@` (\"@@mention\" is invalid)\n            if (pos >= 2 && tail[pos - 2] === '@') {\n                return false;\n            }\n            return tail.match(self.re.twitter)[0].length;\n        }\n        return 0;\n    },\n    normalize(match) {\n        match.url = 'https://twitter.com/' + match.url.replace(/^@/, '');\n    }\n});\n\nclass IconvDecoder extends Transform {\n    constructor(Iconv, charset) {\n        super();\n\n        // Iconv throws error on ks_c_5601-1987 when it is mapped to EUC-KR\n        // https://github.com/bnoordhuis/node-iconv/issues/169\n        if (charset.toLowerCase() === 'ks_c_5601-1987') {\n            charset = 'CP949';\n        }\n        this.stream = new Iconv(charset, 'UTF-8//TRANSLIT//IGNORE');\n\n        this.inputEnded = false;\n        this.endCb = false;\n\n        this.stream.on('error', err => this.emit('error', err));\n        this.stream.on('data', chunk => this.push(chunk));\n        this.stream.on('end', () => {\n            this.inputEnded = true;\n            if (typeof this.endCb === 'function') {\n                this.endCb();\n            }\n        });\n    }\n\n    _transform(chunk, encoding, done) {\n        this.stream.write(chunk);\n        done();\n    }\n\n    _flush(done) {\n        this.endCb = done;\n        this.stream.end();\n    }\n}\n\nclass JPDecoder extends Transform {\n    constructor(charset) {\n        super();\n\n        this.charset = charset;\n        this.chunks = [];\n        this.chunklen = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        this.chunks.push(chunk);\n        this.chunklen += chunk.length;\n        done();\n    }\n\n    _flush(done) {\n        let input = Buffer.concat(this.chunks, this.chunklen);\n        try {\n            let output = encodingJapanese.convert(input, {\n                to: 'UNICODE', // to_encoding\n                from: this.charset, // from_encoding\n                type: 'string'\n            });\n            if (typeof output === 'string') {\n                output = Buffer.from(output);\n            }\n            this.push(output);\n        } catch (err) {\n            // keep as is on errors\n            this.push(input);\n        }\n\n        done();\n    }\n}\n\nclass MailParser extends Transform {\n    constructor(config) {\n        super({\n            readableObjectMode: true,\n            writableObjectMode: false\n        });\n\n        this.options = config || {};\n        this.splitter = new Splitter(config);\n        this.finished = false;\n        this.waitingEnd = false;\n\n        this.headers = false;\n        this.headerLines = false;\n\n        this.endReceived = false;\n        this.reading = false;\n        this.errored = false;\n\n        this.tree = false;\n        this.curnode = false;\n        this.waitUntilAttachmentEnd = false;\n        this.attachmentCallback = false;\n\n        this.hasHtml = false;\n        this.hasText = false;\n\n        this.text = false;\n        this.html = false;\n        this.textAsHtml = false;\n\n        this.attachmentList = [];\n\n        this.boundaries = [];\n\n        this.decoder = this.getDecoder();\n\n        this.splitter.on('readable', () => {\n            if (this.reading) {\n                return false;\n            }\n            this.readData();\n        });\n\n        this.splitter.on('end', () => {\n            this.endReceived = true;\n            if (!this.reading) {\n                this.endStream();\n            }\n        });\n\n        this.splitter.on('error', err => {\n            this.errored = true;\n            if (typeof this.waitingEnd === 'function') {\n                return this.waitingEnd(err);\n            }\n            this.emit('error', err);\n        });\n\n        this.libmime = new libmime.Libmime({ Iconv: this.options.Iconv });\n    }\n\n    getDecoder() {\n        if (this.options.Iconv) {\n            const Iconv = this.options.Iconv;\n            // create wrapper\n            return {\n                decodeStream(charset) {\n                    return new IconvDecoder(Iconv, charset);\n                }\n            };\n        } else {\n            return {\n                decodeStream(charset) {\n                    charset = (charset || 'ascii')\n                        .toString()\n                        .trim()\n                        .toLowerCase();\n                    if (/^jis|^iso-?2022-?jp|^EUCJP/i.test(charset)) {\n                        // special case not supported by iconv-lite\n                        return new JPDecoder(charset);\n                    }\n\n                    return iconv.decodeStream(charset);\n                }\n            };\n        }\n    }\n\n    readData() {\n        if (this.errored) {\n            return false;\n        }\n        this.reading = true;\n        let data = this.splitter.read();\n        if (data === null) {\n            this.reading = false;\n            if (this.endReceived) {\n                this.endStream();\n            }\n            return;\n        }\n\n        this.processChunk(data, err => {\n            if (err) {\n                if (typeof this.waitingEnd === 'function') {\n                    return this.waitingEnd(err);\n                }\n                return this.emit('error', err);\n            }\n            setImmediate(() => this.readData());\n        });\n    }\n\n    endStream() {\n        this.finished = true;\n\n        if (this.curnode && this.curnode.decoder) {\n            this.curnode.decoder.end();\n        }\n        if (typeof this.waitingEnd === 'function') {\n            this.waitingEnd();\n        }\n    }\n\n    _transform(chunk, encoding, done) {\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        if (this.splitter.write(chunk) === false) {\n            return this.splitter.once('drain', () => {\n                done();\n            });\n        } else {\n            return done();\n        }\n    }\n\n    _flush(done) {\n        setImmediate(() => this.splitter.end());\n        if (this.finished) {\n            return this.cleanup(done);\n        }\n        this.waitingEnd = () => {\n            this.cleanup(() => {\n                done();\n            });\n        };\n    }\n\n    cleanup(done) {\n        let finish = () => {\n            let t = this.getTextContent();\n            this.push(t);\n            done();\n        };\n\n        if (this.curnode && this.curnode.decoder && this.curnode.decoder.readable && !this.decoderEnded) {\n            (this.curnode.contentStream || this.curnode.decoder).once('end', () => {\n                finish();\n            });\n            this.curnode.decoder.end();\n        } else {\n            setImmediate(() => {\n                finish();\n            });\n        }\n    }\n\n    processHeaders(lines) {\n        let headers = new Map();\n        (lines || []).forEach(line => {\n            let key = line.key;\n            let value = ((this.libmime.decodeHeader(line.line) || {}).value || '').toString().trim();\n            value = Buffer.from(value, 'binary').toString();\n            switch (key) {\n                case 'content-type':\n                case 'content-disposition':\n                case 'dkim-signature':\n                    value = this.libmime.parseHeaderValue(value);\n                    if (value.value) {\n                        value.value = this.libmime.decodeWords(value.value);\n                    }\n                    Object.keys((value && value.params) || {}).forEach(key => {\n                        try {\n                            value.params[key] = this.libmime.decodeWords(value.params[key]);\n                        } catch (E) {\n                            // ignore, keep as is\n                        }\n                    });\n                    break;\n                case 'date':\n                    value = new Date(value);\n                    if (!value || value.toString() === 'Invalid Date' || !value.getTime()) {\n                        // date parsing failed :S\n                        value = new Date();\n                    }\n                    break;\n                case 'subject':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore, keep as is\n                    }\n                    break;\n                case 'references':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore\n                    }\n                    value = value.split(/\\s+/).map(this.ensureMessageIDFormat);\n                    break;\n                case 'message-id':\n                case 'in-reply-to':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore\n                    }\n                    value = this.ensureMessageIDFormat(value);\n                    break;\n                case 'priority':\n                case 'x-priority':\n                case 'x-msmail-priority':\n                case 'importance':\n                    key = 'priority';\n                    value = this.parsePriority(value);\n                    break;\n                case 'from':\n                case 'to':\n                case 'cc':\n                case 'bcc':\n                case 'sender':\n                case 'reply-to':\n                case 'delivered-to':\n                case 'return-path':\n                    value = addressparser(value);\n                    this.decodeAddresses(value);\n                    value = {\n                        value,\n                        html: this.getAddressesHTML(value),\n                        text: this.getAddressesText(value)\n                    };\n                    break;\n            }\n\n            // handle list-* keys\n            if (key.substr(0, 5) === 'list-') {\n                value = this.parseListHeader(key.substr(5), value);\n                key = 'list';\n            }\n\n            if (value) {\n                if (!headers.has(key)) {\n                    headers.set(key, [].concat(value || []));\n                } else if (Array.isArray(value)) {\n                    headers.set(key, headers.get(key).concat(value));\n                } else {\n                    headers.get(key).push(value);\n                }\n            }\n        });\n\n        // keep only the first value\n        let singleKeys = [\n            'message-id',\n            'content-id',\n            'from',\n            'sender',\n            'in-reply-to',\n            'reply-to',\n            'subject',\n            'date',\n            'content-disposition',\n            'content-type',\n            'content-transfer-encoding',\n            'priority',\n            'mime-version',\n            'content-description',\n            'precedence',\n            'errors-to'\n        ];\n\n        headers.forEach((value, key) => {\n            if (Array.isArray(value)) {\n                if (singleKeys.includes(key) && value.length) {\n                    headers.set(key, value[value.length - 1]);\n                } else if (value.length === 1) {\n                    headers.set(key, value[0]);\n                }\n            }\n\n            if (key === 'list') {\n                // normalize List-* headers\n                let listValue = {};\n                [].concat(value || []).forEach(val => {\n                    Object.keys(val || {}).forEach(listKey => {\n                        listValue[listKey] = val[listKey];\n                    });\n                });\n                headers.set(key, listValue);\n            }\n        });\n\n        return headers;\n    }\n\n    parseListHeader(key, value) {\n        let addresses = addressparser(value);\n        let response = {};\n        let data = addresses\n            .map(address => {\n                if (/^https?:/i.test(address.name)) {\n                    response.url = address.name;\n                } else if (address.name) {\n                    response.name = address.name;\n                }\n                if (/^mailto:/.test(address.address)) {\n                    response.mail = address.address.substr(7);\n                } else if (address.address && address.address.indexOf('@') < 0) {\n                    response.id = address.address;\n                } else if (address.address) {\n                    response.mail = address.address;\n                }\n                if (Object.keys(response).length) {\n                    return response;\n                }\n                return false;\n            })\n            .filter(address => address);\n        if (data.length) {\n            return {\n                [key]: response\n            };\n        }\n        return false;\n    }\n\n    parsePriority(value) {\n        value = value.toLowerCase().trim();\n        if (!isNaN(parseInt(value, 10))) {\n            // support \"X-Priority: 1 (Highest)\"\n            value = parseInt(value, 10) || 0;\n            if (value === 3) {\n                return 'normal';\n            } else if (value > 3) {\n                return 'low';\n            } else {\n                return 'high';\n            }\n        } else {\n            switch (value) {\n                case 'non-urgent':\n                case 'low':\n                    return 'low';\n                case 'urgent':\n                case 'high':\n                    return 'high';\n            }\n        }\n        return 'normal';\n    }\n\n    ensureMessageIDFormat(value) {\n        if (!value.length) {\n            return false;\n        }\n\n        if (value.charAt(0) !== '<') {\n            value = '<' + value;\n        }\n\n        if (value.charAt(value.length - 1) !== '>') {\n            value += '>';\n        }\n\n        return value;\n    }\n\n    decodeAddresses(addresses) {\n        for (let i = 0; i < addresses.length; i++) {\n            let address = addresses[i];\n            address.name = (address.name || '').toString().trim();\n\n            if (!address.address && /^(=\\?([^?]+)\\?[Bb]\\?[^?]*\\?=)(\\s*=\\?([^?]+)\\?[Bb]\\?[^?]*\\?=)*$/.test(address.name)) {\n                let parsed = addressparser(this.libmime.decodeWords(address.name));\n                if (parsed.length) {\n                    parsed.forEach(entry => addresses.push(entry));\n                }\n\n                // remove current element\n                addresses.splice(i, 1);\n                i--;\n                continue;\n            }\n\n            if (address.name) {\n                try {\n                    address.name = this.libmime.decodeWords(address.name);\n                } catch (E) {\n                    //ignore, keep as is\n                }\n            }\n            if (/@xn--/.test(address.address)) {\n                address.address =\n                    address.address.substr(0, address.address.lastIndexOf('@') + 1) +\n                    punycode.toUnicode(address.address.substr(address.address.lastIndexOf('@') + 1));\n            }\n            if (address.group) {\n                this.decodeAddresses(address.group);\n            }\n        }\n    }\n\n    createNode(node) {\n        let contentType = node.contentType;\n        let disposition = node.disposition;\n        let encoding = node.encoding;\n        let charset = node.charset;\n\n        if (!contentType && node.root) {\n            contentType = 'text/plain';\n        }\n\n        let newNode = {\n            node,\n            headerLines: node.headers.lines,\n            headers: this.processHeaders(node.headers.getList()),\n            contentType,\n            children: []\n        };\n\n        if (!/^multipart\\//i.test(contentType)) {\n            if (disposition && !['attachment', 'inline'].includes(disposition)) {\n                disposition = 'attachment';\n            }\n\n            if (!disposition && !['text/plain', 'text/html'].includes(contentType)) {\n                newNode.disposition = 'attachment';\n            } else {\n                newNode.disposition = disposition || 'inline';\n            }\n\n            newNode.isAttachment = !['text/plain', 'text/html'].includes(contentType) || newNode.disposition !== 'inline';\n\n            newNode.encoding = ['quoted-printable', 'base64'].includes(encoding) ? encoding : 'binary';\n\n            if (charset) {\n                newNode.charset = charset;\n            }\n\n            let decoder = node.getDecoder();\n            decoder.on('end', () => {\n                this.decoderEnded = true;\n            });\n            newNode.decoder = decoder;\n        }\n\n        if (node.root) {\n            this.headers = newNode.headers;\n            this.headerLines = newNode.headerLines;\n        }\n\n        // find location in tree\n\n        if (!this.tree) {\n            newNode.root = true;\n            this.curnode = this.tree = newNode;\n            return newNode;\n        }\n\n        // immediate child of root node\n        if (!this.curnode.parent) {\n            newNode.parent = this.curnode;\n            this.curnode.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // siblings\n        if (this.curnode.parent.node === node.parentNode) {\n            newNode.parent = this.curnode.parent;\n            this.curnode.parent.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // first child\n        if (this.curnode.node === node.parentNode) {\n            newNode.parent = this.curnode;\n            this.curnode.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // move up\n        let parentNode = this.curnode;\n        while ((parentNode = parentNode.parent)) {\n            if (parentNode.node === node.parentNode) {\n                newNode.parent = parentNode;\n                parentNode.children.push(newNode);\n                this.curnode = newNode;\n                return newNode;\n            }\n        }\n\n        // should never happen, can't detect parent\n        this.curnode = newNode;\n        return newNode;\n    }\n\n    getTextContent() {\n        let text = [];\n        let html = [];\n        let processNode = (alternative, level, node) => {\n            if (node.showMeta) {\n                let meta = ['From', 'Subject', 'Date', 'To', 'Cc', 'Bcc']\n                    .map(fkey => {\n                        let key = fkey.toLowerCase();\n                        if (!node.headers.has(key)) {\n                            return false;\n                        }\n                        let value = node.headers.get(key);\n                        if (!value) {\n                            return false;\n                        }\n                        return {\n                            key: fkey,\n                            value: Array.isArray(value) ? value[value.length - 1] : value\n                        };\n                    })\n                    .filter(entry => entry);\n                if (this.hasHtml) {\n                    html.push(\n                        '<table class=\"mp_head\">' +\n                            meta\n                                .map(entry => {\n                                    let value = entry.value;\n                                    switch (entry.key) {\n                                        case 'From':\n                                        case 'To':\n                                        case 'Cc':\n                                        case 'Bcc':\n                                            value = value.html;\n                                            break;\n                                        case 'Date':\n                                            value = this.options.formatDateString ? this.options.formatDateString(value) : value.toUTCString();\n                                            break;\n                                        case 'Subject':\n                                            value = '<strong>' + he.encode(value) + '</strong>';\n                                            break;\n                                        default:\n                                            value = he.encode(value);\n                                    }\n\n                                    return '<tr><td class=\"mp_head_key\">' + he.encode(entry.key) + ':</td><td class=\"mp_head_value\">' + value + '<td></tr>';\n                                })\n                                .join('\\n') +\n                            '<table>'\n                    );\n                }\n                if (this.hasText) {\n                    text.push(\n                        '\\n' +\n                            meta\n                                .map(entry => {\n                                    let value = entry.value;\n                                    switch (entry.key) {\n                                        case 'From':\n                                        case 'To':\n                                        case 'Cc':\n                                        case 'Bcc':\n                                            value = value.text;\n                                            break;\n                                        case 'Date':\n                                            value = this.options.formatDateString ? this.options.formatDateString(value) : value.toUTCString();\n                                            break;\n                                    }\n                                    return entry.key + ': ' + value;\n                                })\n                                .join('\\n') +\n                            '\\n'\n                    );\n                }\n            }\n            if (node.textContent) {\n                if (node.contentType === 'text/plain') {\n                    text.push(node.textContent);\n                    if (!alternative && this.hasHtml) {\n                        html.push(this.textToHtml(node.textContent));\n                    }\n                } else if (node.contentType === 'text/html') {\n                    let failedToParseHtml = false;\n                    if ((!alternative && this.hasText) || (node.root && !this.hasText)) {\n                        if (this.options.skipHtmlToText) {\n                            text.push('');\n                        } else if (node.textContent.length > this.options.maxHtmlLengthToParse) {\n                            this.emit('error', new Error(`HTML too long for parsing ${node.textContent.length} bytes`));\n                            text.push('Invalid HTML content (too long)');\n                            failedToParseHtml = true;\n                        } else {\n                            try {\n                                text.push(htmlToText.fromString(node.textContent));\n                            } catch (err) {\n                                this.emit('error', new Error('Failed to parse HTML'));\n                                text.push('Invalid HTML content');\n                                failedToParseHtml = true;\n                            }\n                        }\n                    }\n                    if (!failedToParseHtml) {\n                        html.push(node.textContent);\n                    }\n                }\n            }\n            alternative = alternative || node.contentType === 'multipart/alternative';\n            node.children.forEach(subNode => {\n                processNode(alternative, level + 1, subNode);\n            });\n        };\n\n        processNode(false, 0, this.tree);\n\n        let response = {\n            type: 'text'\n        };\n        if (html.length) {\n            this.html = response.html = html.join('<br/>\\n');\n        }\n        if (text.length) {\n            this.text = response.text = text.join('\\n');\n            this.textAsHtml = response.textAsHtml = text.map(part => this.textToHtml(part)).join('<br/>\\n');\n        }\n        return response;\n    }\n\n    processChunk(data, done) {\n        let partId = null;\n        if (data._parentBoundary) {\n            partId = this._getPartId(data._parentBoundary);\n        }\n        switch (data.type) {\n            case 'node': {\n                let node = this.createNode(data);\n                if (node === this.tree) {\n                    ['subject', 'references', 'date', 'to', 'from', 'to', 'cc', 'bcc', 'message-id', 'in-reply-to', 'reply-to'].forEach(key => {\n                        if (node.headers.has(key)) {\n                            this[key.replace(/-([a-z])/g, (m, c) => c.toUpperCase())] = node.headers.get(key);\n                        }\n                    });\n                    this.emit('headers', node.headers);\n                }\n\n                if (data.contentType === 'message/rfc822' && data.messageNode) {\n                    break;\n                }\n\n                if (data.parentNode && data.parentNode.contentType === 'message/rfc822') {\n                    node.showMeta = true;\n                }\n\n                if (node.isAttachment) {\n                    let contentType = node.contentType;\n                    if (node.contentType === 'application/octet-stream' && data.filename) {\n                        contentType = this.libmime.detectMimeType(data.filename) || 'application/octet-stream';\n                    }\n\n                    let attachment = {\n                        type: 'attachment',\n                        content: null,\n                        contentType,\n                        partId,\n                        release: () => {\n                            attachment.release = null;\n                            if (this.waitUntilAttachmentEnd && typeof this.attachmentCallback === 'function') {\n                                setImmediate(this.attachmentCallback);\n                            }\n                            this.attachmentCallback = false;\n                            this.waitUntilAttachmentEnd = false;\n                        }\n                    };\n\n                    let hasher = new StreamHash(attachment, 'md5');\n                    node.decoder.on('error', err => {\n                        hasher.emit('error', err);\n                    });\n\n                    node.decoder.on('readable', () => {\n                        let chunk;\n\n                        while ((chunk = node.decoder.read()) !== null) {\n                            hasher.write(chunk);\n                        }\n                    });\n\n                    node.decoder.once('end', () => {\n                        hasher.end();\n                    });\n\n                    //node.decoder.pipe(hasher);\n                    attachment.content = hasher;\n\n                    this.waitUntilAttachmentEnd = true;\n                    if (data.disposition) {\n                        attachment.contentDisposition = data.disposition;\n                    }\n\n                    if (data.filename) {\n                        attachment.filename = data.filename;\n                    }\n\n                    if (node.headers.has('content-id')) {\n                        attachment.contentId = [].concat(node.headers.get('content-id') || []).shift();\n                        attachment.cid = attachment.contentId\n                            .trim()\n                            .replace(/^<|>$/g, '')\n                            .trim();\n                        // check if the attachment is \"related\" to text content like an embedded image etc\n                        let parentNode = node;\n                        while ((parentNode = parentNode.parent)) {\n                            if (parentNode.contentType === 'multipart/related') {\n                                attachment.related = true;\n                            }\n                        }\n                    }\n\n                    attachment.headers = node.headers;\n                    this.push(attachment);\n                    this.attachmentList.push(attachment);\n                } else if (node.disposition === 'inline') {\n                    let chunks = [];\n                    let chunklen = 0;\n                    node.contentStream = node.decoder;\n\n                    if (node.contentType === 'text/plain') {\n                        this.hasText = true;\n                    } else if (node.contentType === 'text/html') {\n                        this.hasHtml = true;\n                    }\n\n                    if (node.node.flowed) {\n                        let contentStream = node.contentStream;\n                        let flowDecoder = new FlowedDecoder({\n                            delSp: node.node.delSp\n                        });\n                        contentStream.on('error', err => {\n                            flowDecoder.emit('error', err);\n                        });\n                        contentStream.pipe(flowDecoder);\n                        node.contentStream = flowDecoder;\n                    }\n\n                    let charset = node.charset || 'utf-8';\n                    //charset = charset || 'windows-1257';\n\n                    if (!['ascii', 'usascii', 'utf8'].includes(charset.toLowerCase().replace(/[^a-z0-9]+/g, ''))) {\n                        try {\n                            let contentStream = node.contentStream;\n                            let decodeStream = this.decoder.decodeStream(charset);\n                            contentStream.on('error', err => {\n                                decodeStream.emit('error', err);\n                            });\n                            contentStream.pipe(decodeStream);\n                            node.contentStream = decodeStream;\n                        } catch (E) {\n                            // do not decode charset\n                        }\n                    }\n\n                    node.contentStream.on('readable', () => {\n                        let chunk;\n                        while ((chunk = node.contentStream.read()) !== null) {\n                            if (typeof chunk === 'string') {\n                                chunk = Buffer.from(chunk);\n                            }\n                            chunks.push(chunk);\n                            chunklen += chunk.length;\n                        }\n                    });\n\n                    node.contentStream.once('end', () => {\n                        node.textContent = Buffer.concat(chunks, chunklen)\n                            .toString()\n                            .replace(/\\r?\\n/g, '\\n');\n                    });\n\n                    node.contentStream.once('error', err => {\n                        this.emit('error', err);\n                    });\n                }\n\n                break;\n            }\n\n            case 'data':\n                if (this.curnode && this.curnode.decoder) {\n                    this.curnode.decoder.end();\n                }\n\n                if (this.waitUntilAttachmentEnd) {\n                    this.attachmentCallback = done;\n                    return;\n                }\n\n                // multipart message structure\n                // this is not related to any specific 'node' block as it includes\n                // everything between the end of some node body and between the next header\n                //process.stdout.write(data.value);\n                break;\n\n            case 'body':\n                if (this.curnode && this.curnode.decoder && this.curnode.decoder.writable) {\n                    if (this.curnode.decoder.write(data.value) === false) {\n                        return this.curnode.decoder.once('drain', done);\n                    }\n                }\n\n                // Leaf element body. Includes the body for the last 'node' block. You might\n                // have several 'body' calls for a single 'node' block\n                //process.stdout.write(data.value);\n                break;\n        }\n\n        setImmediate(done);\n    }\n\n    _getPartId(parentBoundary) {\n        let boundaryIndex = this.boundaries.findIndex(item => item.name === parentBoundary);\n        if (boundaryIndex === -1) {\n            this.boundaries.push({ name: parentBoundary, count: 1 });\n            boundaryIndex = this.boundaries.length - 1;\n        } else {\n            this.boundaries[boundaryIndex].count++;\n        }\n        let partId = '1';\n        for (let i = 0; i <= boundaryIndex; i++) {\n            if (i === 0) partId = this.boundaries[i].count.toString();\n            else partId += '.' + this.boundaries[i].count.toString();\n        }\n        return partId;\n    }\n\n    getAddressesHTML(value) {\n        let formatSingleLevel = addresses =>\n            addresses\n                .map(address => {\n                    let str = '<span class=\"mp_address_group\">';\n                    if (address.name) {\n                        str += '<span class=\"mp_address_name\">' + he.encode(address.name) + (address.group ? ': ' : '') + '</span>';\n                    }\n                    if (address.address) {\n                        let link = '<a href=\"mailto:' + he.encode(address.address) + '\" class=\"mp_address_email\">' + he.encode(address.address) + '</a>';\n                        if (address.name) {\n                            str += ' &lt;' + link + '&gt;';\n                        } else {\n                            str += link;\n                        }\n                    }\n                    if (address.group) {\n                        str += formatSingleLevel(address.group) + ';';\n                    }\n                    return str + '</span>';\n                })\n                .join(', ');\n        return formatSingleLevel([].concat(value || []));\n    }\n\n    getAddressesText(value) {\n        let formatSingleLevel = addresses =>\n            addresses\n                .map(address => {\n                    let str = '';\n                    if (address.name) {\n                        str += address.name + (address.group ? ': ' : '');\n                    }\n                    if (address.address) {\n                        let link = address.address;\n                        if (address.name) {\n                            str += ' <' + link + '>';\n                        } else {\n                            str += link;\n                        }\n                    }\n                    if (address.group) {\n                        str += formatSingleLevel(address.group) + ';';\n                    }\n                    return str;\n                })\n                .join(', ');\n        return formatSingleLevel([].concat(value || []));\n    }\n\n    updateImageLinks(replaceCallback, done) {\n        if (!this.html) {\n            return setImmediate(() => done(null, false));\n        }\n\n        let cids = new Map();\n        let html = (this.html || '').toString();\n\n        if (this.options.skipImageLinks) {\n            return done(null, html);\n        }\n\n        html.replace(/\\bcid:([^'\"\\s]{1,256})/g, (match, cid) => {\n            for (let i = 0, len = this.attachmentList.length; i < len; i++) {\n                if (this.attachmentList[i].cid === cid && /^image\\/[\\w]+$/i.test(this.attachmentList[i].contentType)) {\n                    if (/^image\\/[\\w]+$/i.test(this.attachmentList[i].contentType)) {\n                        cids.set(cid, {\n                            attachment: this.attachmentList[i]\n                        });\n                    }\n                    break;\n                }\n            }\n            return match;\n        });\n\n        let cidList = [];\n        cids.forEach(entry => {\n            cidList.push(entry);\n        });\n\n        let pos = 0;\n        let processNext = () => {\n            if (pos >= cidList.length) {\n                html = html.replace(/\\bcid:([^'\"\\s]{1,256})/g, (match, cid) => {\n                    if (cids.has(cid) && cids.get(cid).url) {\n                        return cids.get(cid).url;\n                    }\n                    return match;\n                });\n\n                return done(null, html);\n            }\n            let entry = cidList[pos++];\n            replaceCallback(entry.attachment, (err, url) => {\n                if (err) {\n                    return setImmediate(() => done(err));\n                }\n                entry.url = url;\n                setImmediate(processNext);\n            });\n        };\n\n        setImmediate(processNext);\n    }\n\n    textToHtml(str) {\n        if (this.options.skipTextToHtml) {\n            return '';\n        }\n        str = (str || '').toString();\n        let encoded;\n\n        let linkified = false;\n        if (!this.options.skipTextLinks) {\n            try {\n                if (linkify.pretest(str)) {\n                    linkified = true;\n                    let links = linkify.match(str) || [];\n                    let result = [];\n                    let last = 0;\n\n                    links.forEach(link => {\n                        if (last < link.index) {\n                            let textPart = he\n                                // encode special chars\n                                .encode(str.slice(last, link.index), {\n                                    useNamedReferences: true\n                                });\n                            result.push(textPart);\n                        }\n\n                        result.push(`<a href=\"${link.url}\">${link.text}</a>`);\n\n                        last = link.lastIndex;\n                    });\n\n                    let textPart = he\n                        // encode special chars\n                        .encode(str.slice(last), {\n                            useNamedReferences: true\n                        });\n                    result.push(textPart);\n\n                    encoded = result.join('');\n                }\n            } catch (E) {\n                // failed, don't linkify\n            }\n        }\n\n        if (!linkified) {\n            encoded = he\n                // encode special chars\n                .encode(str, {\n                    useNamedReferences: true\n                });\n        }\n\n        let text =\n            '<p>' +\n            encoded\n                .replace(/\\r?\\n/g, '\\n')\n                .trim() // normalize line endings\n                .replace(/[ \\t]+$/gm, '')\n                .trim() // trim empty line endings\n                .replace(/\\n\\n+/g, '</p><p>')\n                .trim() // insert <p> to multiple linebreaks\n                .replace(/\\n/g, '<br/>') + // insert <br> to single linebreaks\n            '</p>';\n\n        return text;\n    }\n}\n\nmodule.exports = MailParser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/mailparser/lib/mail-parser.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}}],"sources":{"../node_modules/mailparser/lib/mail-parser.js":"'use strict';\n\nconst mailsplit = require('mailsplit');\nconst libmime = require('libmime');\nconst addressparser = require('nodemailer/lib/addressparser');\nconst Transform = require('stream').Transform;\nconst Splitter = mailsplit.Splitter;\nconst punycode = require('punycode');\nconst FlowedDecoder = require('mailsplit/lib/flowed-decoder');\nconst StreamHash = require('./stream-hash');\nconst iconv = require('iconv-lite');\nconst htmlToText = require('html-to-text');\nconst he = require('he');\nconst linkify = require('linkify-it')();\nconst tlds = require('tlds');\nconst encodingJapanese = require('encoding-japanese');\n\nlinkify\n    .tlds(tlds) // Reload with full tlds list\n    .tlds('onion', true) // Add unofficial `.onion` domain\n    .add('git:', 'http:') // Add `git:` ptotocol as \"alias\"\n    .add('ftp:', null) // Disable `ftp:` ptotocol\n    .set({ fuzzyIP: true, fuzzyLink: true, fuzzyEmail: true });\n\n// twitter linkifier from\n// https://github.com/markdown-it/linkify-it#example-2-add-twitter-mentions-handler\nlinkify.add('@', {\n    validate(text, pos, self) {\n        let tail = text.slice(pos);\n\n        if (!self.re.twitter) {\n            self.re.twitter = new RegExp('^([a-zA-Z0-9_]){1,15}(?!_)(?=$|' + self.re.src_ZPCc + ')');\n        }\n        if (self.re.twitter.test(tail)) {\n            // Linkifier allows punctuation chars before prefix,\n            // but we additionally disable `@` (\"@@mention\" is invalid)\n            if (pos >= 2 && tail[pos - 2] === '@') {\n                return false;\n            }\n            return tail.match(self.re.twitter)[0].length;\n        }\n        return 0;\n    },\n    normalize(match) {\n        match.url = 'https://twitter.com/' + match.url.replace(/^@/, '');\n    }\n});\n\nclass IconvDecoder extends Transform {\n    constructor(Iconv, charset) {\n        super();\n\n        // Iconv throws error on ks_c_5601-1987 when it is mapped to EUC-KR\n        // https://github.com/bnoordhuis/node-iconv/issues/169\n        if (charset.toLowerCase() === 'ks_c_5601-1987') {\n            charset = 'CP949';\n        }\n        this.stream = new Iconv(charset, 'UTF-8//TRANSLIT//IGNORE');\n\n        this.inputEnded = false;\n        this.endCb = false;\n\n        this.stream.on('error', err => this.emit('error', err));\n        this.stream.on('data', chunk => this.push(chunk));\n        this.stream.on('end', () => {\n            this.inputEnded = true;\n            if (typeof this.endCb === 'function') {\n                this.endCb();\n            }\n        });\n    }\n\n    _transform(chunk, encoding, done) {\n        this.stream.write(chunk);\n        done();\n    }\n\n    _flush(done) {\n        this.endCb = done;\n        this.stream.end();\n    }\n}\n\nclass JPDecoder extends Transform {\n    constructor(charset) {\n        super();\n\n        this.charset = charset;\n        this.chunks = [];\n        this.chunklen = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        this.chunks.push(chunk);\n        this.chunklen += chunk.length;\n        done();\n    }\n\n    _flush(done) {\n        let input = Buffer.concat(this.chunks, this.chunklen);\n        try {\n            let output = encodingJapanese.convert(input, {\n                to: 'UNICODE', // to_encoding\n                from: this.charset, // from_encoding\n                type: 'string'\n            });\n            if (typeof output === 'string') {\n                output = Buffer.from(output);\n            }\n            this.push(output);\n        } catch (err) {\n            // keep as is on errors\n            this.push(input);\n        }\n\n        done();\n    }\n}\n\nclass MailParser extends Transform {\n    constructor(config) {\n        super({\n            readableObjectMode: true,\n            writableObjectMode: false\n        });\n\n        this.options = config || {};\n        this.splitter = new Splitter(config);\n        this.finished = false;\n        this.waitingEnd = false;\n\n        this.headers = false;\n        this.headerLines = false;\n\n        this.endReceived = false;\n        this.reading = false;\n        this.errored = false;\n\n        this.tree = false;\n        this.curnode = false;\n        this.waitUntilAttachmentEnd = false;\n        this.attachmentCallback = false;\n\n        this.hasHtml = false;\n        this.hasText = false;\n\n        this.text = false;\n        this.html = false;\n        this.textAsHtml = false;\n\n        this.attachmentList = [];\n\n        this.boundaries = [];\n\n        this.decoder = this.getDecoder();\n\n        this.splitter.on('readable', () => {\n            if (this.reading) {\n                return false;\n            }\n            this.readData();\n        });\n\n        this.splitter.on('end', () => {\n            this.endReceived = true;\n            if (!this.reading) {\n                this.endStream();\n            }\n        });\n\n        this.splitter.on('error', err => {\n            this.errored = true;\n            if (typeof this.waitingEnd === 'function') {\n                return this.waitingEnd(err);\n            }\n            this.emit('error', err);\n        });\n\n        this.libmime = new libmime.Libmime({ Iconv: this.options.Iconv });\n    }\n\n    getDecoder() {\n        if (this.options.Iconv) {\n            const Iconv = this.options.Iconv;\n            // create wrapper\n            return {\n                decodeStream(charset) {\n                    return new IconvDecoder(Iconv, charset);\n                }\n            };\n        } else {\n            return {\n                decodeStream(charset) {\n                    charset = (charset || 'ascii')\n                        .toString()\n                        .trim()\n                        .toLowerCase();\n                    if (/^jis|^iso-?2022-?jp|^EUCJP/i.test(charset)) {\n                        // special case not supported by iconv-lite\n                        return new JPDecoder(charset);\n                    }\n\n                    return iconv.decodeStream(charset);\n                }\n            };\n        }\n    }\n\n    readData() {\n        if (this.errored) {\n            return false;\n        }\n        this.reading = true;\n        let data = this.splitter.read();\n        if (data === null) {\n            this.reading = false;\n            if (this.endReceived) {\n                this.endStream();\n            }\n            return;\n        }\n\n        this.processChunk(data, err => {\n            if (err) {\n                if (typeof this.waitingEnd === 'function') {\n                    return this.waitingEnd(err);\n                }\n                return this.emit('error', err);\n            }\n            setImmediate(() => this.readData());\n        });\n    }\n\n    endStream() {\n        this.finished = true;\n\n        if (this.curnode && this.curnode.decoder) {\n            this.curnode.decoder.end();\n        }\n        if (typeof this.waitingEnd === 'function') {\n            this.waitingEnd();\n        }\n    }\n\n    _transform(chunk, encoding, done) {\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        if (this.splitter.write(chunk) === false) {\n            return this.splitter.once('drain', () => {\n                done();\n            });\n        } else {\n            return done();\n        }\n    }\n\n    _flush(done) {\n        setImmediate(() => this.splitter.end());\n        if (this.finished) {\n            return this.cleanup(done);\n        }\n        this.waitingEnd = () => {\n            this.cleanup(() => {\n                done();\n            });\n        };\n    }\n\n    cleanup(done) {\n        let finish = () => {\n            let t = this.getTextContent();\n            this.push(t);\n            done();\n        };\n\n        if (this.curnode && this.curnode.decoder && this.curnode.decoder.readable && !this.decoderEnded) {\n            (this.curnode.contentStream || this.curnode.decoder).once('end', () => {\n                finish();\n            });\n            this.curnode.decoder.end();\n        } else {\n            setImmediate(() => {\n                finish();\n            });\n        }\n    }\n\n    processHeaders(lines) {\n        let headers = new Map();\n        (lines || []).forEach(line => {\n            let key = line.key;\n            let value = ((this.libmime.decodeHeader(line.line) || {}).value || '').toString().trim();\n            value = Buffer.from(value, 'binary').toString();\n            switch (key) {\n                case 'content-type':\n                case 'content-disposition':\n                case 'dkim-signature':\n                    value = this.libmime.parseHeaderValue(value);\n                    if (value.value) {\n                        value.value = this.libmime.decodeWords(value.value);\n                    }\n                    Object.keys((value && value.params) || {}).forEach(key => {\n                        try {\n                            value.params[key] = this.libmime.decodeWords(value.params[key]);\n                        } catch (E) {\n                            // ignore, keep as is\n                        }\n                    });\n                    break;\n                case 'date':\n                    value = new Date(value);\n                    if (!value || value.toString() === 'Invalid Date' || !value.getTime()) {\n                        // date parsing failed :S\n                        value = new Date();\n                    }\n                    break;\n                case 'subject':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore, keep as is\n                    }\n                    break;\n                case 'references':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore\n                    }\n                    value = value.split(/\\s+/).map(this.ensureMessageIDFormat);\n                    break;\n                case 'message-id':\n                case 'in-reply-to':\n                    try {\n                        value = this.libmime.decodeWords(value);\n                    } catch (E) {\n                        // ignore\n                    }\n                    value = this.ensureMessageIDFormat(value);\n                    break;\n                case 'priority':\n                case 'x-priority':\n                case 'x-msmail-priority':\n                case 'importance':\n                    key = 'priority';\n                    value = this.parsePriority(value);\n                    break;\n                case 'from':\n                case 'to':\n                case 'cc':\n                case 'bcc':\n                case 'sender':\n                case 'reply-to':\n                case 'delivered-to':\n                case 'return-path':\n                    value = addressparser(value);\n                    this.decodeAddresses(value);\n                    value = {\n                        value,\n                        html: this.getAddressesHTML(value),\n                        text: this.getAddressesText(value)\n                    };\n                    break;\n            }\n\n            // handle list-* keys\n            if (key.substr(0, 5) === 'list-') {\n                value = this.parseListHeader(key.substr(5), value);\n                key = 'list';\n            }\n\n            if (value) {\n                if (!headers.has(key)) {\n                    headers.set(key, [].concat(value || []));\n                } else if (Array.isArray(value)) {\n                    headers.set(key, headers.get(key).concat(value));\n                } else {\n                    headers.get(key).push(value);\n                }\n            }\n        });\n\n        // keep only the first value\n        let singleKeys = [\n            'message-id',\n            'content-id',\n            'from',\n            'sender',\n            'in-reply-to',\n            'reply-to',\n            'subject',\n            'date',\n            'content-disposition',\n            'content-type',\n            'content-transfer-encoding',\n            'priority',\n            'mime-version',\n            'content-description',\n            'precedence',\n            'errors-to'\n        ];\n\n        headers.forEach((value, key) => {\n            if (Array.isArray(value)) {\n                if (singleKeys.includes(key) && value.length) {\n                    headers.set(key, value[value.length - 1]);\n                } else if (value.length === 1) {\n                    headers.set(key, value[0]);\n                }\n            }\n\n            if (key === 'list') {\n                // normalize List-* headers\n                let listValue = {};\n                [].concat(value || []).forEach(val => {\n                    Object.keys(val || {}).forEach(listKey => {\n                        listValue[listKey] = val[listKey];\n                    });\n                });\n                headers.set(key, listValue);\n            }\n        });\n\n        return headers;\n    }\n\n    parseListHeader(key, value) {\n        let addresses = addressparser(value);\n        let response = {};\n        let data = addresses\n            .map(address => {\n                if (/^https?:/i.test(address.name)) {\n                    response.url = address.name;\n                } else if (address.name) {\n                    response.name = address.name;\n                }\n                if (/^mailto:/.test(address.address)) {\n                    response.mail = address.address.substr(7);\n                } else if (address.address && address.address.indexOf('@') < 0) {\n                    response.id = address.address;\n                } else if (address.address) {\n                    response.mail = address.address;\n                }\n                if (Object.keys(response).length) {\n                    return response;\n                }\n                return false;\n            })\n            .filter(address => address);\n        if (data.length) {\n            return {\n                [key]: response\n            };\n        }\n        return false;\n    }\n\n    parsePriority(value) {\n        value = value.toLowerCase().trim();\n        if (!isNaN(parseInt(value, 10))) {\n            // support \"X-Priority: 1 (Highest)\"\n            value = parseInt(value, 10) || 0;\n            if (value === 3) {\n                return 'normal';\n            } else if (value > 3) {\n                return 'low';\n            } else {\n                return 'high';\n            }\n        } else {\n            switch (value) {\n                case 'non-urgent':\n                case 'low':\n                    return 'low';\n                case 'urgent':\n                case 'high':\n                    return 'high';\n            }\n        }\n        return 'normal';\n    }\n\n    ensureMessageIDFormat(value) {\n        if (!value.length) {\n            return false;\n        }\n\n        if (value.charAt(0) !== '<') {\n            value = '<' + value;\n        }\n\n        if (value.charAt(value.length - 1) !== '>') {\n            value += '>';\n        }\n\n        return value;\n    }\n\n    decodeAddresses(addresses) {\n        for (let i = 0; i < addresses.length; i++) {\n            let address = addresses[i];\n            address.name = (address.name || '').toString().trim();\n\n            if (!address.address && /^(=\\?([^?]+)\\?[Bb]\\?[^?]*\\?=)(\\s*=\\?([^?]+)\\?[Bb]\\?[^?]*\\?=)*$/.test(address.name)) {\n                let parsed = addressparser(this.libmime.decodeWords(address.name));\n                if (parsed.length) {\n                    parsed.forEach(entry => addresses.push(entry));\n                }\n\n                // remove current element\n                addresses.splice(i, 1);\n                i--;\n                continue;\n            }\n\n            if (address.name) {\n                try {\n                    address.name = this.libmime.decodeWords(address.name);\n                } catch (E) {\n                    //ignore, keep as is\n                }\n            }\n            if (/@xn--/.test(address.address)) {\n                address.address =\n                    address.address.substr(0, address.address.lastIndexOf('@') + 1) +\n                    punycode.toUnicode(address.address.substr(address.address.lastIndexOf('@') + 1));\n            }\n            if (address.group) {\n                this.decodeAddresses(address.group);\n            }\n        }\n    }\n\n    createNode(node) {\n        let contentType = node.contentType;\n        let disposition = node.disposition;\n        let encoding = node.encoding;\n        let charset = node.charset;\n\n        if (!contentType && node.root) {\n            contentType = 'text/plain';\n        }\n\n        let newNode = {\n            node,\n            headerLines: node.headers.lines,\n            headers: this.processHeaders(node.headers.getList()),\n            contentType,\n            children: []\n        };\n\n        if (!/^multipart\\//i.test(contentType)) {\n            if (disposition && !['attachment', 'inline'].includes(disposition)) {\n                disposition = 'attachment';\n            }\n\n            if (!disposition && !['text/plain', 'text/html'].includes(contentType)) {\n                newNode.disposition = 'attachment';\n            } else {\n                newNode.disposition = disposition || 'inline';\n            }\n\n            newNode.isAttachment = !['text/plain', 'text/html'].includes(contentType) || newNode.disposition !== 'inline';\n\n            newNode.encoding = ['quoted-printable', 'base64'].includes(encoding) ? encoding : 'binary';\n\n            if (charset) {\n                newNode.charset = charset;\n            }\n\n            let decoder = node.getDecoder();\n            decoder.on('end', () => {\n                this.decoderEnded = true;\n            });\n            newNode.decoder = decoder;\n        }\n\n        if (node.root) {\n            this.headers = newNode.headers;\n            this.headerLines = newNode.headerLines;\n        }\n\n        // find location in tree\n\n        if (!this.tree) {\n            newNode.root = true;\n            this.curnode = this.tree = newNode;\n            return newNode;\n        }\n\n        // immediate child of root node\n        if (!this.curnode.parent) {\n            newNode.parent = this.curnode;\n            this.curnode.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // siblings\n        if (this.curnode.parent.node === node.parentNode) {\n            newNode.parent = this.curnode.parent;\n            this.curnode.parent.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // first child\n        if (this.curnode.node === node.parentNode) {\n            newNode.parent = this.curnode;\n            this.curnode.children.push(newNode);\n            this.curnode = newNode;\n            return newNode;\n        }\n\n        // move up\n        let parentNode = this.curnode;\n        while ((parentNode = parentNode.parent)) {\n            if (parentNode.node === node.parentNode) {\n                newNode.parent = parentNode;\n                parentNode.children.push(newNode);\n                this.curnode = newNode;\n                return newNode;\n            }\n        }\n\n        // should never happen, can't detect parent\n        this.curnode = newNode;\n        return newNode;\n    }\n\n    getTextContent() {\n        let text = [];\n        let html = [];\n        let processNode = (alternative, level, node) => {\n            if (node.showMeta) {\n                let meta = ['From', 'Subject', 'Date', 'To', 'Cc', 'Bcc']\n                    .map(fkey => {\n                        let key = fkey.toLowerCase();\n                        if (!node.headers.has(key)) {\n                            return false;\n                        }\n                        let value = node.headers.get(key);\n                        if (!value) {\n                            return false;\n                        }\n                        return {\n                            key: fkey,\n                            value: Array.isArray(value) ? value[value.length - 1] : value\n                        };\n                    })\n                    .filter(entry => entry);\n                if (this.hasHtml) {\n                    html.push(\n                        '<table class=\"mp_head\">' +\n                            meta\n                                .map(entry => {\n                                    let value = entry.value;\n                                    switch (entry.key) {\n                                        case 'From':\n                                        case 'To':\n                                        case 'Cc':\n                                        case 'Bcc':\n                                            value = value.html;\n                                            break;\n                                        case 'Date':\n                                            value = this.options.formatDateString ? this.options.formatDateString(value) : value.toUTCString();\n                                            break;\n                                        case 'Subject':\n                                            value = '<strong>' + he.encode(value) + '</strong>';\n                                            break;\n                                        default:\n                                            value = he.encode(value);\n                                    }\n\n                                    return '<tr><td class=\"mp_head_key\">' + he.encode(entry.key) + ':</td><td class=\"mp_head_value\">' + value + '<td></tr>';\n                                })\n                                .join('\\n') +\n                            '<table>'\n                    );\n                }\n                if (this.hasText) {\n                    text.push(\n                        '\\n' +\n                            meta\n                                .map(entry => {\n                                    let value = entry.value;\n                                    switch (entry.key) {\n                                        case 'From':\n                                        case 'To':\n                                        case 'Cc':\n                                        case 'Bcc':\n                                            value = value.text;\n                                            break;\n                                        case 'Date':\n                                            value = this.options.formatDateString ? this.options.formatDateString(value) : value.toUTCString();\n                                            break;\n                                    }\n                                    return entry.key + ': ' + value;\n                                })\n                                .join('\\n') +\n                            '\\n'\n                    );\n                }\n            }\n            if (node.textContent) {\n                if (node.contentType === 'text/plain') {\n                    text.push(node.textContent);\n                    if (!alternative && this.hasHtml) {\n                        html.push(this.textToHtml(node.textContent));\n                    }\n                } else if (node.contentType === 'text/html') {\n                    let failedToParseHtml = false;\n                    if ((!alternative && this.hasText) || (node.root && !this.hasText)) {\n                        if (this.options.skipHtmlToText) {\n                            text.push('');\n                        } else if (node.textContent.length > this.options.maxHtmlLengthToParse) {\n                            this.emit('error', new Error(`HTML too long for parsing ${node.textContent.length} bytes`));\n                            text.push('Invalid HTML content (too long)');\n                            failedToParseHtml = true;\n                        } else {\n                            try {\n                                text.push(htmlToText.fromString(node.textContent));\n                            } catch (err) {\n                                this.emit('error', new Error('Failed to parse HTML'));\n                                text.push('Invalid HTML content');\n                                failedToParseHtml = true;\n                            }\n                        }\n                    }\n                    if (!failedToParseHtml) {\n                        html.push(node.textContent);\n                    }\n                }\n            }\n            alternative = alternative || node.contentType === 'multipart/alternative';\n            node.children.forEach(subNode => {\n                processNode(alternative, level + 1, subNode);\n            });\n        };\n\n        processNode(false, 0, this.tree);\n\n        let response = {\n            type: 'text'\n        };\n        if (html.length) {\n            this.html = response.html = html.join('<br/>\\n');\n        }\n        if (text.length) {\n            this.text = response.text = text.join('\\n');\n            this.textAsHtml = response.textAsHtml = text.map(part => this.textToHtml(part)).join('<br/>\\n');\n        }\n        return response;\n    }\n\n    processChunk(data, done) {\n        let partId = null;\n        if (data._parentBoundary) {\n            partId = this._getPartId(data._parentBoundary);\n        }\n        switch (data.type) {\n            case 'node': {\n                let node = this.createNode(data);\n                if (node === this.tree) {\n                    ['subject', 'references', 'date', 'to', 'from', 'to', 'cc', 'bcc', 'message-id', 'in-reply-to', 'reply-to'].forEach(key => {\n                        if (node.headers.has(key)) {\n                            this[key.replace(/-([a-z])/g, (m, c) => c.toUpperCase())] = node.headers.get(key);\n                        }\n                    });\n                    this.emit('headers', node.headers);\n                }\n\n                if (data.contentType === 'message/rfc822' && data.messageNode) {\n                    break;\n                }\n\n                if (data.parentNode && data.parentNode.contentType === 'message/rfc822') {\n                    node.showMeta = true;\n                }\n\n                if (node.isAttachment) {\n                    let contentType = node.contentType;\n                    if (node.contentType === 'application/octet-stream' && data.filename) {\n                        contentType = this.libmime.detectMimeType(data.filename) || 'application/octet-stream';\n                    }\n\n                    let attachment = {\n                        type: 'attachment',\n                        content: null,\n                        contentType,\n                        partId,\n                        release: () => {\n                            attachment.release = null;\n                            if (this.waitUntilAttachmentEnd && typeof this.attachmentCallback === 'function') {\n                                setImmediate(this.attachmentCallback);\n                            }\n                            this.attachmentCallback = false;\n                            this.waitUntilAttachmentEnd = false;\n                        }\n                    };\n\n                    let hasher = new StreamHash(attachment, 'md5');\n                    node.decoder.on('error', err => {\n                        hasher.emit('error', err);\n                    });\n\n                    node.decoder.on('readable', () => {\n                        let chunk;\n\n                        while ((chunk = node.decoder.read()) !== null) {\n                            hasher.write(chunk);\n                        }\n                    });\n\n                    node.decoder.once('end', () => {\n                        hasher.end();\n                    });\n\n                    //node.decoder.pipe(hasher);\n                    attachment.content = hasher;\n\n                    this.waitUntilAttachmentEnd = true;\n                    if (data.disposition) {\n                        attachment.contentDisposition = data.disposition;\n                    }\n\n                    if (data.filename) {\n                        attachment.filename = data.filename;\n                    }\n\n                    if (node.headers.has('content-id')) {\n                        attachment.contentId = [].concat(node.headers.get('content-id') || []).shift();\n                        attachment.cid = attachment.contentId\n                            .trim()\n                            .replace(/^<|>$/g, '')\n                            .trim();\n                        // check if the attachment is \"related\" to text content like an embedded image etc\n                        let parentNode = node;\n                        while ((parentNode = parentNode.parent)) {\n                            if (parentNode.contentType === 'multipart/related') {\n                                attachment.related = true;\n                            }\n                        }\n                    }\n\n                    attachment.headers = node.headers;\n                    this.push(attachment);\n                    this.attachmentList.push(attachment);\n                } else if (node.disposition === 'inline') {\n                    let chunks = [];\n                    let chunklen = 0;\n                    node.contentStream = node.decoder;\n\n                    if (node.contentType === 'text/plain') {\n                        this.hasText = true;\n                    } else if (node.contentType === 'text/html') {\n                        this.hasHtml = true;\n                    }\n\n                    if (node.node.flowed) {\n                        let contentStream = node.contentStream;\n                        let flowDecoder = new FlowedDecoder({\n                            delSp: node.node.delSp\n                        });\n                        contentStream.on('error', err => {\n                            flowDecoder.emit('error', err);\n                        });\n                        contentStream.pipe(flowDecoder);\n                        node.contentStream = flowDecoder;\n                    }\n\n                    let charset = node.charset || 'utf-8';\n                    //charset = charset || 'windows-1257';\n\n                    if (!['ascii', 'usascii', 'utf8'].includes(charset.toLowerCase().replace(/[^a-z0-9]+/g, ''))) {\n                        try {\n                            let contentStream = node.contentStream;\n                            let decodeStream = this.decoder.decodeStream(charset);\n                            contentStream.on('error', err => {\n                                decodeStream.emit('error', err);\n                            });\n                            contentStream.pipe(decodeStream);\n                            node.contentStream = decodeStream;\n                        } catch (E) {\n                            // do not decode charset\n                        }\n                    }\n\n                    node.contentStream.on('readable', () => {\n                        let chunk;\n                        while ((chunk = node.contentStream.read()) !== null) {\n                            if (typeof chunk === 'string') {\n                                chunk = Buffer.from(chunk);\n                            }\n                            chunks.push(chunk);\n                            chunklen += chunk.length;\n                        }\n                    });\n\n                    node.contentStream.once('end', () => {\n                        node.textContent = Buffer.concat(chunks, chunklen)\n                            .toString()\n                            .replace(/\\r?\\n/g, '\\n');\n                    });\n\n                    node.contentStream.once('error', err => {\n                        this.emit('error', err);\n                    });\n                }\n\n                break;\n            }\n\n            case 'data':\n                if (this.curnode && this.curnode.decoder) {\n                    this.curnode.decoder.end();\n                }\n\n                if (this.waitUntilAttachmentEnd) {\n                    this.attachmentCallback = done;\n                    return;\n                }\n\n                // multipart message structure\n                // this is not related to any specific 'node' block as it includes\n                // everything between the end of some node body and between the next header\n                //process.stdout.write(data.value);\n                break;\n\n            case 'body':\n                if (this.curnode && this.curnode.decoder && this.curnode.decoder.writable) {\n                    if (this.curnode.decoder.write(data.value) === false) {\n                        return this.curnode.decoder.once('drain', done);\n                    }\n                }\n\n                // Leaf element body. Includes the body for the last 'node' block. You might\n                // have several 'body' calls for a single 'node' block\n                //process.stdout.write(data.value);\n                break;\n        }\n\n        setImmediate(done);\n    }\n\n    _getPartId(parentBoundary) {\n        let boundaryIndex = this.boundaries.findIndex(item => item.name === parentBoundary);\n        if (boundaryIndex === -1) {\n            this.boundaries.push({ name: parentBoundary, count: 1 });\n            boundaryIndex = this.boundaries.length - 1;\n        } else {\n            this.boundaries[boundaryIndex].count++;\n        }\n        let partId = '1';\n        for (let i = 0; i <= boundaryIndex; i++) {\n            if (i === 0) partId = this.boundaries[i].count.toString();\n            else partId += '.' + this.boundaries[i].count.toString();\n        }\n        return partId;\n    }\n\n    getAddressesHTML(value) {\n        let formatSingleLevel = addresses =>\n            addresses\n                .map(address => {\n                    let str = '<span class=\"mp_address_group\">';\n                    if (address.name) {\n                        str += '<span class=\"mp_address_name\">' + he.encode(address.name) + (address.group ? ': ' : '') + '</span>';\n                    }\n                    if (address.address) {\n                        let link = '<a href=\"mailto:' + he.encode(address.address) + '\" class=\"mp_address_email\">' + he.encode(address.address) + '</a>';\n                        if (address.name) {\n                            str += ' &lt;' + link + '&gt;';\n                        } else {\n                            str += link;\n                        }\n                    }\n                    if (address.group) {\n                        str += formatSingleLevel(address.group) + ';';\n                    }\n                    return str + '</span>';\n                })\n                .join(', ');\n        return formatSingleLevel([].concat(value || []));\n    }\n\n    getAddressesText(value) {\n        let formatSingleLevel = addresses =>\n            addresses\n                .map(address => {\n                    let str = '';\n                    if (address.name) {\n                        str += address.name + (address.group ? ': ' : '');\n                    }\n                    if (address.address) {\n                        let link = address.address;\n                        if (address.name) {\n                            str += ' <' + link + '>';\n                        } else {\n                            str += link;\n                        }\n                    }\n                    if (address.group) {\n                        str += formatSingleLevel(address.group) + ';';\n                    }\n                    return str;\n                })\n                .join(', ');\n        return formatSingleLevel([].concat(value || []));\n    }\n\n    updateImageLinks(replaceCallback, done) {\n        if (!this.html) {\n            return setImmediate(() => done(null, false));\n        }\n\n        let cids = new Map();\n        let html = (this.html || '').toString();\n\n        if (this.options.skipImageLinks) {\n            return done(null, html);\n        }\n\n        html.replace(/\\bcid:([^'\"\\s]{1,256})/g, (match, cid) => {\n            for (let i = 0, len = this.attachmentList.length; i < len; i++) {\n                if (this.attachmentList[i].cid === cid && /^image\\/[\\w]+$/i.test(this.attachmentList[i].contentType)) {\n                    if (/^image\\/[\\w]+$/i.test(this.attachmentList[i].contentType)) {\n                        cids.set(cid, {\n                            attachment: this.attachmentList[i]\n                        });\n                    }\n                    break;\n                }\n            }\n            return match;\n        });\n\n        let cidList = [];\n        cids.forEach(entry => {\n            cidList.push(entry);\n        });\n\n        let pos = 0;\n        let processNext = () => {\n            if (pos >= cidList.length) {\n                html = html.replace(/\\bcid:([^'\"\\s]{1,256})/g, (match, cid) => {\n                    if (cids.has(cid) && cids.get(cid).url) {\n                        return cids.get(cid).url;\n                    }\n                    return match;\n                });\n\n                return done(null, html);\n            }\n            let entry = cidList[pos++];\n            replaceCallback(entry.attachment, (err, url) => {\n                if (err) {\n                    return setImmediate(() => done(err));\n                }\n                entry.url = url;\n                setImmediate(processNext);\n            });\n        };\n\n        setImmediate(processNext);\n    }\n\n    textToHtml(str) {\n        if (this.options.skipTextToHtml) {\n            return '';\n        }\n        str = (str || '').toString();\n        let encoded;\n\n        let linkified = false;\n        if (!this.options.skipTextLinks) {\n            try {\n                if (linkify.pretest(str)) {\n                    linkified = true;\n                    let links = linkify.match(str) || [];\n                    let result = [];\n                    let last = 0;\n\n                    links.forEach(link => {\n                        if (last < link.index) {\n                            let textPart = he\n                                // encode special chars\n                                .encode(str.slice(last, link.index), {\n                                    useNamedReferences: true\n                                });\n                            result.push(textPart);\n                        }\n\n                        result.push(`<a href=\"${link.url}\">${link.text}</a>`);\n\n                        last = link.lastIndex;\n                    });\n\n                    let textPart = he\n                        // encode special chars\n                        .encode(str.slice(last), {\n                            useNamedReferences: true\n                        });\n                    result.push(textPart);\n\n                    encoded = result.join('');\n                }\n            } catch (E) {\n                // failed, don't linkify\n            }\n        }\n\n        if (!linkified) {\n            encoded = he\n                // encode special chars\n                .encode(str, {\n                    useNamedReferences: true\n                });\n        }\n\n        let text =\n            '<p>' +\n            encoded\n                .replace(/\\r?\\n/g, '\\n')\n                .trim() // normalize line endings\n                .replace(/[ \\t]+$/gm, '')\n                .trim() // trim empty line endings\n                .replace(/\\n\\n+/g, '</p><p>')\n                .trim() // insert <p> to multiple linebreaks\n                .replace(/\\n/g, '<br/>') + // insert <br> to single linebreaks\n            '</p>';\n\n        return text;\n    }\n}\n\nmodule.exports = MailParser;\n"},"lineCount":1145}},"error":null,"hash":"33bce6e5477a39abe946928a90b710b8","cacheData":{"env":{}}}