{"id":"../node_modules/@hapi/hoek/lib/merge.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/@hapi/hoek/package.json","includedInParent":true,"mtime":1602507588116},{"name":"./assert","loc":{"line":3,"column":23},"parent":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/merge.js","resolved":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/assert.js"},{"name":"./clone","loc":{"line":4,"column":22},"parent":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/merge.js","resolved":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/clone.js"},{"name":"./utils","loc":{"line":5,"column":22},"parent":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/merge.js","resolved":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/utils.js"},{"name":"buffer","parent":"/var/www/html/StMichel/node_modules/@hapi/hoek/lib/merge.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Utils = require('./utils');\n\n\nconst internals = {};\n\n\nmodule.exports = internals.merge = function (target, source, options) {\n\n    Assert(target && typeof target === 'object', 'Invalid target value: must be an object');\n    Assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');\n\n    if (!source) {\n        return target;\n    }\n\n    options = Object.assign({ nullOverride: true, mergeArrays: true }, options);\n\n    if (Array.isArray(source)) {\n        Assert(Array.isArray(target), 'Cannot merge array onto an object');\n        if (!options.mergeArrays) {\n            target.length = 0;                                                          // Must not change target assignment\n        }\n\n        for (let i = 0; i < source.length; ++i) {\n            target.push(Clone(source[i], { symbols: options.symbols }));\n        }\n\n        return target;\n    }\n\n    const keys = Utils.keys(source, options);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key === '__proto__' ||\n            !Object.prototype.propertyIsEnumerable.call(source, key)) {\n\n            continue;\n        }\n\n        const value = source[key];\n        if (value &&\n            typeof value === 'object') {\n\n            if (target[key] === value) {\n                continue;                                           // Can occur for shallow merges\n            }\n\n            if (!target[key] ||\n                typeof target[key] !== 'object' ||\n                (Array.isArray(target[key]) !== Array.isArray(value)) ||\n                value instanceof Date ||\n                (Buffer && Buffer.isBuffer(value)) ||               // $lab:coverage:ignore$\n                value instanceof RegExp) {\n\n                target[key] = Clone(value, { symbols: options.symbols });\n            }\n            else {\n                internals.merge(target[key], value, options);\n            }\n        }\n        else {\n            if (value !== null &&\n                value !== undefined) {                              // Explicit to preserve empty strings\n\n                target[key] = value;\n            }\n            else if (options.nullOverride) {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@hapi/hoek/lib/merge.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}}],"sources":{"../node_modules/@hapi/hoek/lib/merge.js":"'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Utils = require('./utils');\n\n\nconst internals = {};\n\n\nmodule.exports = internals.merge = function (target, source, options) {\n\n    Assert(target && typeof target === 'object', 'Invalid target value: must be an object');\n    Assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');\n\n    if (!source) {\n        return target;\n    }\n\n    options = Object.assign({ nullOverride: true, mergeArrays: true }, options);\n\n    if (Array.isArray(source)) {\n        Assert(Array.isArray(target), 'Cannot merge array onto an object');\n        if (!options.mergeArrays) {\n            target.length = 0;                                                          // Must not change target assignment\n        }\n\n        for (let i = 0; i < source.length; ++i) {\n            target.push(Clone(source[i], { symbols: options.symbols }));\n        }\n\n        return target;\n    }\n\n    const keys = Utils.keys(source, options);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key === '__proto__' ||\n            !Object.prototype.propertyIsEnumerable.call(source, key)) {\n\n            continue;\n        }\n\n        const value = source[key];\n        if (value &&\n            typeof value === 'object') {\n\n            if (target[key] === value) {\n                continue;                                           // Can occur for shallow merges\n            }\n\n            if (!target[key] ||\n                typeof target[key] !== 'object' ||\n                (Array.isArray(target[key]) !== Array.isArray(value)) ||\n                value instanceof Date ||\n                (Buffer && Buffer.isBuffer(value)) ||               // $lab:coverage:ignore$\n                value instanceof RegExp) {\n\n                target[key] = Clone(value, { symbols: options.symbols });\n            }\n            else {\n                internals.merge(target[key], value, options);\n            }\n        }\n        else {\n            if (value !== null &&\n                value !== undefined) {                              // Explicit to preserve empty strings\n\n                target[key] = value;\n            }\n            else if (options.nullOverride) {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n};\n"},"lineCount":80}},"error":null,"hash":"ac63892cc1f8029cf679df89721cc3bc","cacheData":{"env":{}}}