{"id":"../node_modules/mailsplit/lib/message-splitter.js","dependencies":[{"name":"/var/www/html/StMichel/package.json","includedInParent":true,"mtime":1602507593919},{"name":"/var/www/html/StMichel/node_modules/mailsplit/package.json","includedInParent":true,"mtime":1602507588612},{"name":"stream","loc":{"line":3,"column":26},"parent":"/var/www/html/StMichel/node_modules/mailsplit/lib/message-splitter.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/stream-browserify/index.js"},{"name":"./mime-node","loc":{"line":4,"column":25},"parent":"/var/www/html/StMichel/node_modules/mailsplit/lib/message-splitter.js","resolved":"/var/www/html/StMichel/node_modules/mailsplit/lib/mime-node.js"},{"name":"buffer","parent":"/var/www/html/StMichel/node_modules/mailsplit/lib/message-splitter.js","resolved":"/home/etudiant/.npm-packages/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nconst Transform = require('stream').Transform;\nconst MimeNode = require('./mime-node');\n\nconst MAX_HEAD_SIZE = 1 * 1024 * 1024;\nconst MAX_CHILD_NODES = 1000;\n\nconst HEAD = 0x01;\nconst BODY = 0x02;\n\nclass MessageSplitter extends Transform {\n    constructor(config) {\n        let options = {\n            readableObjectMode: true,\n            writableObjectMode: false\n        };\n        super(options);\n\n        this.config = config || {};\n        this.maxHeadSize = this.config.maxHeadSize || MAX_HEAD_SIZE;\n        this.maxChildNodes = this.config.maxChildNodes || MAX_CHILD_NODES;\n        this.tree = [];\n        this.nodeCounter = 0;\n        this.newNode();\n        this.tree.push(this.node);\n        this.line = false;\n        this.errored = false;\n    }\n\n    _transform(chunk, encoding, callback) {\n        // process line by line\n        // find next line ending\n        let pos = 0;\n        let i = 0;\n        let group = {\n            type: 'none'\n        };\n        let groupstart = this.line ? -this.line.length : 0;\n        let groupend = 0;\n\n        let checkTrailingLinebreak = data => {\n            if (data.type === 'body' && data.node.parentNode && data.value && data.value.length) {\n                if (data.value[data.value.length - 1] === 0x0a) {\n                    groupstart--;\n                    groupend--;\n                    pos--;\n                    if (data.value.length > 1 && data.value[data.value.length - 2] === 0x0d) {\n                        groupstart--;\n                        groupend--;\n                        pos--;\n                        if (groupstart < 0 && !this.line) {\n                            // store only <CR> as <LF> should be on the positive side\n                            this.line = Buffer.allocUnsafe(1);\n                            this.line[0] = 0x0d;\n                        }\n                        data.value = data.value.slice(0, data.value.length - 2);\n                    } else {\n                        data.value = data.value.slice(0, data.value.length - 1);\n                    }\n                } else if (data.value[data.value.length - 1] === 0x0d) {\n                    groupstart--;\n                    groupend--;\n                    pos--;\n                    data.value = data.value.slice(0, data.value.length - 1);\n                }\n            }\n        };\n\n        let iterateData = () => {\n            for (let len = chunk.length; i < len; i++) {\n                // find next <LF>\n                if (chunk[i] === 0x0a) {\n                    // line end\n\n                    let start = Math.max(pos, 0);\n                    pos = ++i;\n\n                    return this.processLine(chunk.slice(start, i), false, (err, data, flush) => {\n                        if (err) {\n                            this.errored = true;\n                            return setImmediate(() => callback(err));\n                        }\n\n                        if (!data) {\n                            return setImmediate(iterateData);\n                        }\n\n                        if (flush) {\n                            if (group && group.type !== 'none') {\n                                if (group.type === 'body' && groupend >= groupstart && group.node.parentNode) {\n                                    // do not include the last line ending for body\n                                    if (chunk[groupend - 1] === 0x0a) {\n                                        groupend--;\n                                        if (groupend >= groupstart && chunk[groupend - 1] === 0x0d) {\n                                            groupend--;\n                                        }\n                                    }\n                                }\n                                if (groupstart !== groupend) {\n                                    group.value = chunk.slice(groupstart, groupend);\n                                    if (groupend < i) {\n                                        data.value = chunk.slice(groupend, i);\n                                    }\n                                }\n                                this.push(group);\n                                group = {\n                                    type: 'none'\n                                };\n                                groupstart = groupend = i;\n                            }\n                            this.push(data);\n                            groupend = i;\n                            return setImmediate(iterateData);\n                        }\n\n                        if (data.type === group.type) {\n                            // shift slice end position forward\n                            groupend = i;\n                        } else {\n                            if (group.type === 'body' && groupend >= groupstart && group.node.parentNode) {\n                                // do not include the last line ending for body\n                                if (chunk[groupend - 1] === 0x0a) {\n                                    groupend--;\n                                    if (groupend >= groupstart && chunk[groupend - 1] === 0x0d) {\n                                        groupend--;\n                                    }\n                                }\n                            }\n\n                            if (group.type !== 'none' && group.type !== 'node') {\n                                // we have a previous data/body chunk to output\n                                if (groupstart !== groupend) {\n                                    group.value = chunk.slice(groupstart, groupend);\n                                    if (group.value && group.value.length) {\n                                        this.push(group);\n                                        group = {\n                                            type: 'none'\n                                        };\n                                    }\n                                }\n                            }\n\n                            if (data.type === 'node') {\n                                this.push(data);\n                                groupstart = i;\n                                groupend = i;\n                            } else if (groupstart < 0) {\n                                groupstart = i;\n                                groupend = i;\n                                checkTrailingLinebreak(data);\n                                if (data.value && data.value.length) {\n                                    this.push(data);\n                                }\n                            } else {\n                                // start new body/data chunk\n                                group = data;\n                                groupstart = groupend;\n                                groupend = i;\n                            }\n                        }\n                        return setImmediate(iterateData);\n                    });\n                }\n            }\n\n            // skip last linebreak for body\n            if (pos >= groupstart + 1 && group.type === 'body' && group.node.parentNode) {\n                // do not include the last line ending for body\n                if (chunk[pos - 1] === 0x0a) {\n                    pos--;\n                    if (pos >= groupstart && chunk[pos - 1] === 0x0d) {\n                        pos--;\n                    }\n                }\n            }\n\n            if (group.type !== 'none' && group.type !== 'node' && pos > groupstart) {\n                // we have a leftover data/body chunk to push out\n                group.value = chunk.slice(groupstart, pos);\n\n                if (group.value && group.value.length) {\n                    this.push(group);\n                    group = {\n                        type: 'none'\n                    };\n                }\n            }\n\n            if (pos < chunk.length) {\n                if (this.line) {\n                    this.line = Buffer.concat([this.line, chunk.slice(pos)]);\n                } else {\n                    this.line = chunk.slice(pos);\n                }\n            }\n            callback();\n        };\n\n        setImmediate(iterateData);\n    }\n\n    _flush(callback) {\n        if (this.errored) {\n            return callback();\n        }\n        this.processLine(false, true, (err, data) => {\n            if (err) {\n                return setImmediate(() => callback(err));\n            }\n            if (data && (data.type === 'node' || (data.value && data.value.length))) {\n                this.push(data);\n            }\n            callback();\n        });\n    }\n\n    compareBoundary(line, startpos, boundary) {\n        // --{boundary}\\r\\n or --{boundary}--\\r\\n\n        if (line.length < boundary.length + 3 + startpos || line.length > boundary.length + 6 + startpos) {\n            return false;\n        }\n        for (let i = 0; i < boundary.length; i++) {\n            if (line[i + 2 + startpos] !== boundary[i]) {\n                return false;\n            }\n        }\n\n        let pos = 0;\n        for (let i = boundary.length + 2 + startpos; i < line.length; i++) {\n            let c = line[i];\n            if (pos === 0 && (c === 0x0d || c === 0x0a)) {\n                // 1: next node\n                return 1;\n            }\n            if (pos === 0 && c !== 0x2d) {\n                // expecting \"-\"\n                return false;\n            }\n            if (pos === 1 && c !== 0x2d) {\n                // expecting \"-\"\n                return false;\n            }\n            if (pos === 2 && c !== 0x0d && c !== 0x0a) {\n                // expecting line terminator, either <CR> or <LF>\n                return false;\n            }\n            if (pos === 3 && c !== 0x0a) {\n                // expecting line terminator <LF>\n                return false;\n            }\n            pos++;\n        }\n\n        // 2: multipart end\n        return 2;\n    }\n\n    checkBoundary(line) {\n        let startpos = 0;\n        if (line.length >= 1 && (line[0] === 0x0d || line[0] === 0x0a)) {\n            startpos++;\n            if (line.length >= 2 && (line[0] === 0x0d || line[1] === 0x0a)) {\n                startpos++;\n            }\n        }\n        if (line.length < 4 || line[startpos] !== 0x2d || line[startpos + 1] !== 0x2d) {\n            // defnitely not a boundary\n            return false;\n        }\n\n        let boundary;\n        if (this.node._boundary && (boundary = this.compareBoundary(line, startpos, this.node._boundary))) {\n            // 1: next child\n            // 2: multipart end\n            return boundary;\n        }\n\n        if (this.node._parentBoundary && (boundary = this.compareBoundary(line, startpos, this.node._parentBoundary))) {\n            // 3: next sibling\n            // 4: parent end\n            return boundary + 2;\n        }\n\n        return false;\n    }\n\n    processLine(line, final, next) {\n        let flush = false;\n\n        if (this.line && line) {\n            line = Buffer.concat([this.line, line]);\n            this.line = false;\n        } else if (this.line && !line) {\n            line = this.line;\n            this.line = false;\n        }\n\n        if (!line) {\n            line = Buffer.alloc(0);\n        }\n\n        if (this.nodeCounter > this.maxChildNodes) {\n            let err = new Error('Max allowed child nodes exceeded');\n            err.code = 'EMAXLEN';\n            return next(err);\n        }\n\n        // we check boundary outside the HEAD/BODY scope as it may appear anywhere\n        let boundary = this.checkBoundary(line);\n        if (boundary) {\n            // reached boundary, switch context\n            switch (boundary) {\n                case 1:\n                    // next child\n                    this.newNode(this.node);\n                    flush = true;\n                    break;\n                case 2:\n                    // reached end of children, keep current node\n                    break;\n                case 3: {\n                    // next sibling\n                    let parentNode = this.node.parentNode;\n                    if (parentNode && parentNode.contentType === 'message/rfc822') {\n                        // special case where immediate parent is an inline message block\n                        // move up another step\n                        parentNode = parentNode.parentNode;\n                    }\n                    this.newNode(parentNode);\n                    flush = true;\n                    break;\n                }\n                case 4:\n                    // special case when boundary close a node with only header.\n                    if (this.node && this.node._headerlen && !this.node.headers) {\n                        this.node.parseHeaders();\n                        this.push(this.node);\n                    }\n                    // move up\n                    if (this.tree.length) {\n                        this.node = this.tree.pop();\n                    }\n                    this.state = BODY;\n                    break;\n            }\n\n            return next(\n                null,\n                {\n                    node: this.node,\n                    type: 'data',\n                    value: line\n                },\n                flush\n            );\n        }\n\n        switch (this.state) {\n            case HEAD: {\n                this.node.addHeaderChunk(line);\n                if (this.node._headerlen > this.maxHeadSize) {\n                    let err = new Error('Max header size for a MIME node exceeded');\n                    err.code = 'EMAXLEN';\n                    return next(err);\n                }\n                if (final || (line.length === 1 && line[0] === 0x0a) || (line.length === 2 && line[0] === 0x0d && line[1] === 0x0a)) {\n                    let currentNode = this.node;\n\n                    currentNode.parseHeaders();\n\n                    // if the content is attached message then just continue\n                    if (\n                        currentNode.contentType === 'message/rfc822' &&\n                        !this.config.ignoreEmbedded &&\n                        (!currentNode.encoding || ['7bit', '8bit', 'binary'].includes(currentNode.encoding)) &&\n                        currentNode.disposition !== 'attachment'\n                    ) {\n                        currentNode.messageNode = true;\n                        this.newNode(currentNode);\n                        if (currentNode.parentNode) {\n                            this.node._parentBoundary = currentNode.parentNode._boundary;\n                        }\n                    } else {\n                        if (currentNode.contentType === 'message/rfc822') {\n                            currentNode.messageNode = false;\n                        }\n                        this.state = BODY;\n                        if (currentNode.multipart && currentNode._boundary) {\n                            this.tree.push(currentNode);\n                        }\n                    }\n\n                    return next(null, currentNode, flush);\n                }\n\n                return next();\n            }\n            case BODY: {\n                return next(\n                    null,\n                    {\n                        node: this.node,\n                        type: this.node.multipart ? 'data' : 'body',\n                        value: line\n                    },\n                    flush\n                );\n            }\n        }\n\n        next(null, false);\n    }\n\n    newNode(parent) {\n        this.node = new MimeNode(parent || false, this.config);\n        this.state = HEAD;\n        this.nodeCounter++;\n    }\n}\n\nmodule.exports = MessageSplitter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mailsplit/lib/message-splitter.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}}],"sources":{"../node_modules/mailsplit/lib/message-splitter.js":"'use strict';\n\nconst Transform = require('stream').Transform;\nconst MimeNode = require('./mime-node');\n\nconst MAX_HEAD_SIZE = 1 * 1024 * 1024;\nconst MAX_CHILD_NODES = 1000;\n\nconst HEAD = 0x01;\nconst BODY = 0x02;\n\nclass MessageSplitter extends Transform {\n    constructor(config) {\n        let options = {\n            readableObjectMode: true,\n            writableObjectMode: false\n        };\n        super(options);\n\n        this.config = config || {};\n        this.maxHeadSize = this.config.maxHeadSize || MAX_HEAD_SIZE;\n        this.maxChildNodes = this.config.maxChildNodes || MAX_CHILD_NODES;\n        this.tree = [];\n        this.nodeCounter = 0;\n        this.newNode();\n        this.tree.push(this.node);\n        this.line = false;\n        this.errored = false;\n    }\n\n    _transform(chunk, encoding, callback) {\n        // process line by line\n        // find next line ending\n        let pos = 0;\n        let i = 0;\n        let group = {\n            type: 'none'\n        };\n        let groupstart = this.line ? -this.line.length : 0;\n        let groupend = 0;\n\n        let checkTrailingLinebreak = data => {\n            if (data.type === 'body' && data.node.parentNode && data.value && data.value.length) {\n                if (data.value[data.value.length - 1] === 0x0a) {\n                    groupstart--;\n                    groupend--;\n                    pos--;\n                    if (data.value.length > 1 && data.value[data.value.length - 2] === 0x0d) {\n                        groupstart--;\n                        groupend--;\n                        pos--;\n                        if (groupstart < 0 && !this.line) {\n                            // store only <CR> as <LF> should be on the positive side\n                            this.line = Buffer.allocUnsafe(1);\n                            this.line[0] = 0x0d;\n                        }\n                        data.value = data.value.slice(0, data.value.length - 2);\n                    } else {\n                        data.value = data.value.slice(0, data.value.length - 1);\n                    }\n                } else if (data.value[data.value.length - 1] === 0x0d) {\n                    groupstart--;\n                    groupend--;\n                    pos--;\n                    data.value = data.value.slice(0, data.value.length - 1);\n                }\n            }\n        };\n\n        let iterateData = () => {\n            for (let len = chunk.length; i < len; i++) {\n                // find next <LF>\n                if (chunk[i] === 0x0a) {\n                    // line end\n\n                    let start = Math.max(pos, 0);\n                    pos = ++i;\n\n                    return this.processLine(chunk.slice(start, i), false, (err, data, flush) => {\n                        if (err) {\n                            this.errored = true;\n                            return setImmediate(() => callback(err));\n                        }\n\n                        if (!data) {\n                            return setImmediate(iterateData);\n                        }\n\n                        if (flush) {\n                            if (group && group.type !== 'none') {\n                                if (group.type === 'body' && groupend >= groupstart && group.node.parentNode) {\n                                    // do not include the last line ending for body\n                                    if (chunk[groupend - 1] === 0x0a) {\n                                        groupend--;\n                                        if (groupend >= groupstart && chunk[groupend - 1] === 0x0d) {\n                                            groupend--;\n                                        }\n                                    }\n                                }\n                                if (groupstart !== groupend) {\n                                    group.value = chunk.slice(groupstart, groupend);\n                                    if (groupend < i) {\n                                        data.value = chunk.slice(groupend, i);\n                                    }\n                                }\n                                this.push(group);\n                                group = {\n                                    type: 'none'\n                                };\n                                groupstart = groupend = i;\n                            }\n                            this.push(data);\n                            groupend = i;\n                            return setImmediate(iterateData);\n                        }\n\n                        if (data.type === group.type) {\n                            // shift slice end position forward\n                            groupend = i;\n                        } else {\n                            if (group.type === 'body' && groupend >= groupstart && group.node.parentNode) {\n                                // do not include the last line ending for body\n                                if (chunk[groupend - 1] === 0x0a) {\n                                    groupend--;\n                                    if (groupend >= groupstart && chunk[groupend - 1] === 0x0d) {\n                                        groupend--;\n                                    }\n                                }\n                            }\n\n                            if (group.type !== 'none' && group.type !== 'node') {\n                                // we have a previous data/body chunk to output\n                                if (groupstart !== groupend) {\n                                    group.value = chunk.slice(groupstart, groupend);\n                                    if (group.value && group.value.length) {\n                                        this.push(group);\n                                        group = {\n                                            type: 'none'\n                                        };\n                                    }\n                                }\n                            }\n\n                            if (data.type === 'node') {\n                                this.push(data);\n                                groupstart = i;\n                                groupend = i;\n                            } else if (groupstart < 0) {\n                                groupstart = i;\n                                groupend = i;\n                                checkTrailingLinebreak(data);\n                                if (data.value && data.value.length) {\n                                    this.push(data);\n                                }\n                            } else {\n                                // start new body/data chunk\n                                group = data;\n                                groupstart = groupend;\n                                groupend = i;\n                            }\n                        }\n                        return setImmediate(iterateData);\n                    });\n                }\n            }\n\n            // skip last linebreak for body\n            if (pos >= groupstart + 1 && group.type === 'body' && group.node.parentNode) {\n                // do not include the last line ending for body\n                if (chunk[pos - 1] === 0x0a) {\n                    pos--;\n                    if (pos >= groupstart && chunk[pos - 1] === 0x0d) {\n                        pos--;\n                    }\n                }\n            }\n\n            if (group.type !== 'none' && group.type !== 'node' && pos > groupstart) {\n                // we have a leftover data/body chunk to push out\n                group.value = chunk.slice(groupstart, pos);\n\n                if (group.value && group.value.length) {\n                    this.push(group);\n                    group = {\n                        type: 'none'\n                    };\n                }\n            }\n\n            if (pos < chunk.length) {\n                if (this.line) {\n                    this.line = Buffer.concat([this.line, chunk.slice(pos)]);\n                } else {\n                    this.line = chunk.slice(pos);\n                }\n            }\n            callback();\n        };\n\n        setImmediate(iterateData);\n    }\n\n    _flush(callback) {\n        if (this.errored) {\n            return callback();\n        }\n        this.processLine(false, true, (err, data) => {\n            if (err) {\n                return setImmediate(() => callback(err));\n            }\n            if (data && (data.type === 'node' || (data.value && data.value.length))) {\n                this.push(data);\n            }\n            callback();\n        });\n    }\n\n    compareBoundary(line, startpos, boundary) {\n        // --{boundary}\\r\\n or --{boundary}--\\r\\n\n        if (line.length < boundary.length + 3 + startpos || line.length > boundary.length + 6 + startpos) {\n            return false;\n        }\n        for (let i = 0; i < boundary.length; i++) {\n            if (line[i + 2 + startpos] !== boundary[i]) {\n                return false;\n            }\n        }\n\n        let pos = 0;\n        for (let i = boundary.length + 2 + startpos; i < line.length; i++) {\n            let c = line[i];\n            if (pos === 0 && (c === 0x0d || c === 0x0a)) {\n                // 1: next node\n                return 1;\n            }\n            if (pos === 0 && c !== 0x2d) {\n                // expecting \"-\"\n                return false;\n            }\n            if (pos === 1 && c !== 0x2d) {\n                // expecting \"-\"\n                return false;\n            }\n            if (pos === 2 && c !== 0x0d && c !== 0x0a) {\n                // expecting line terminator, either <CR> or <LF>\n                return false;\n            }\n            if (pos === 3 && c !== 0x0a) {\n                // expecting line terminator <LF>\n                return false;\n            }\n            pos++;\n        }\n\n        // 2: multipart end\n        return 2;\n    }\n\n    checkBoundary(line) {\n        let startpos = 0;\n        if (line.length >= 1 && (line[0] === 0x0d || line[0] === 0x0a)) {\n            startpos++;\n            if (line.length >= 2 && (line[0] === 0x0d || line[1] === 0x0a)) {\n                startpos++;\n            }\n        }\n        if (line.length < 4 || line[startpos] !== 0x2d || line[startpos + 1] !== 0x2d) {\n            // defnitely not a boundary\n            return false;\n        }\n\n        let boundary;\n        if (this.node._boundary && (boundary = this.compareBoundary(line, startpos, this.node._boundary))) {\n            // 1: next child\n            // 2: multipart end\n            return boundary;\n        }\n\n        if (this.node._parentBoundary && (boundary = this.compareBoundary(line, startpos, this.node._parentBoundary))) {\n            // 3: next sibling\n            // 4: parent end\n            return boundary + 2;\n        }\n\n        return false;\n    }\n\n    processLine(line, final, next) {\n        let flush = false;\n\n        if (this.line && line) {\n            line = Buffer.concat([this.line, line]);\n            this.line = false;\n        } else if (this.line && !line) {\n            line = this.line;\n            this.line = false;\n        }\n\n        if (!line) {\n            line = Buffer.alloc(0);\n        }\n\n        if (this.nodeCounter > this.maxChildNodes) {\n            let err = new Error('Max allowed child nodes exceeded');\n            err.code = 'EMAXLEN';\n            return next(err);\n        }\n\n        // we check boundary outside the HEAD/BODY scope as it may appear anywhere\n        let boundary = this.checkBoundary(line);\n        if (boundary) {\n            // reached boundary, switch context\n            switch (boundary) {\n                case 1:\n                    // next child\n                    this.newNode(this.node);\n                    flush = true;\n                    break;\n                case 2:\n                    // reached end of children, keep current node\n                    break;\n                case 3: {\n                    // next sibling\n                    let parentNode = this.node.parentNode;\n                    if (parentNode && parentNode.contentType === 'message/rfc822') {\n                        // special case where immediate parent is an inline message block\n                        // move up another step\n                        parentNode = parentNode.parentNode;\n                    }\n                    this.newNode(parentNode);\n                    flush = true;\n                    break;\n                }\n                case 4:\n                    // special case when boundary close a node with only header.\n                    if (this.node && this.node._headerlen && !this.node.headers) {\n                        this.node.parseHeaders();\n                        this.push(this.node);\n                    }\n                    // move up\n                    if (this.tree.length) {\n                        this.node = this.tree.pop();\n                    }\n                    this.state = BODY;\n                    break;\n            }\n\n            return next(\n                null,\n                {\n                    node: this.node,\n                    type: 'data',\n                    value: line\n                },\n                flush\n            );\n        }\n\n        switch (this.state) {\n            case HEAD: {\n                this.node.addHeaderChunk(line);\n                if (this.node._headerlen > this.maxHeadSize) {\n                    let err = new Error('Max header size for a MIME node exceeded');\n                    err.code = 'EMAXLEN';\n                    return next(err);\n                }\n                if (final || (line.length === 1 && line[0] === 0x0a) || (line.length === 2 && line[0] === 0x0d && line[1] === 0x0a)) {\n                    let currentNode = this.node;\n\n                    currentNode.parseHeaders();\n\n                    // if the content is attached message then just continue\n                    if (\n                        currentNode.contentType === 'message/rfc822' &&\n                        !this.config.ignoreEmbedded &&\n                        (!currentNode.encoding || ['7bit', '8bit', 'binary'].includes(currentNode.encoding)) &&\n                        currentNode.disposition !== 'attachment'\n                    ) {\n                        currentNode.messageNode = true;\n                        this.newNode(currentNode);\n                        if (currentNode.parentNode) {\n                            this.node._parentBoundary = currentNode.parentNode._boundary;\n                        }\n                    } else {\n                        if (currentNode.contentType === 'message/rfc822') {\n                            currentNode.messageNode = false;\n                        }\n                        this.state = BODY;\n                        if (currentNode.multipart && currentNode._boundary) {\n                            this.tree.push(currentNode);\n                        }\n                    }\n\n                    return next(null, currentNode, flush);\n                }\n\n                return next();\n            }\n            case BODY: {\n                return next(\n                    null,\n                    {\n                        node: this.node,\n                        type: this.node.multipart ? 'data' : 'body',\n                        value: line\n                    },\n                    flush\n                );\n            }\n        }\n\n        next(null, false);\n    }\n\n    newNode(parent) {\n        this.node = new MimeNode(parent || false, this.config);\n        this.state = HEAD;\n        this.nodeCounter++;\n    }\n}\n\nmodule.exports = MessageSplitter;\n"},"lineCount":424}},"error":null,"hash":"e5b0cecead87a863d871c6ba6891ca23","cacheData":{"env":{}}}